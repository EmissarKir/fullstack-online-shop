{"version":3,"sources":["store/cartItems.js","utils/history.js","store/filters.js","services/localStorage.service.js","services/auth.service.js","services/http.service.js","services/templatePaint.services.js","store/templates.js","services/product.service.js","store/products.js","utils/withoutLodash.js","services/users.service.js","store/users.js","services/reviews.service.js","store/reviews.js","services/order.service.js","store/orders.js","store/createStore.js","components/ui/navProfile.jsx","assets/images/img-placehold.jpg","components/common/quantity/index.js","components/common/quantity/quantity.jsx","components/common/tooltip/tooltip.js","components/ui/cartItem.jsx","assets/images/empty-basket.gif","components/ui/emptyCart.jsx","components/ui/finish.jsx","components/page/basketPage/basketPage.jsx","components/page/basketPage/index.js","components/common/form/textField.jsx","components/common/form/selectField.jsx","components/common/form/textAreaField.jsx","components/common/button/button.js","components/common/button/index.js","constants/formOptions.js","utils/validator.js","hooks/useForm.jsx","components/ui/templateForm.jsx","components/page/createTemplatePage/createTemplatePage.jsx","components/page/createTemplatePage/index.js","components/page/editTemplatePage/editTemplatePage.jsx","components/page/editTemplatePage/index.js","components/common/table/tableHeader.jsx","components/common/table/tableBody.jsx","components/common/table/index.js","components/common/table/table.jsx","components/ui/paintsTable.jsx","components/common/pagination.jsx","hooks/usePagination.jsx","utils/paginate.js","components/common/loader.jsx","components/page/templateListPage/templateListPage.jsx","components/page/templateListPage/index.js","components/common/itemRate.jsx","components/ui/productCard/productCard.jsx","components/common/form/checkBoxField.jsx","components/ui/filterSubmenu.jsx","components/common/form/radioField.jsx","components/ui/sortSubmenu.jsx","components/ui/filterItem.jsx","components/ui/productsFilter.jsx","constants/templateProperties.js","components/ui/activeFiltersSubitem.jsx","components/ui/activeFiltersItem.jsx","components/ui/activeFilters.jsx","components/page/productListPage/index.js","components/page/productListPage/productListPage.jsx","components/common/form/radioBtnField.jsx","components/ui/radioForm/radioForm.jsx","components/ui/quantityProductPage.jsx","components/ui/productHeader.jsx","utils/getNoun.js","components/ui/productAdvantages.jsx","components/ui/productDetails.jsx","components/ui/productImportant.jsx","components/common/starRating/starRating.jsx","components/common/reviews/addReview.jsx","utils/timeConverter.js","components/common/reviews/review.jsx","components/common/reviews/index.js","components/common/reviews/reviewsList.jsx","components/ui/reviews.jsx","components/page/productPage/index.js","components/page/productPage/productPage.js","layouts/products.jsx","layouts/adminPage.jsx","components/common/swiperSection/index.js","components/common/swiperSection/swiperSection.jsx","assets/palette.svg","assets/paint-roller.svg","components/ui/categories.jsx","layouts/homePage.jsx","components/ui/registerForm.jsx","components/ui/loginForm.jsx","layouts/login.jsx","layouts/logOut.jsx","components/common/collapse.jsx","components/ui/ordersList.jsx","layouts/user.js","routes.js","layouts/test.jsx","components/ui/navbar/navBar.jsx","components/common/protectedRoute.jsx","components/ui/footer.jsx","components/ui/breadcrumbs.jsx","components/ui/search.jsx","components/ui/breadcrumbsAndSearchBar.jsx","App.js","index.js"],"names":["cartItemsSlice","createSlice","name","initialState","entities","isLoading","error","reducers","cartItemsRequested","state","cartItemsReceived","action","payload","cartItemsRequestFailed","cartItemsAdded","index","findIndex","x","paintId","push","currentCount","quantity","count","cartQuantityIncremented","find","cartQuantityDecremented","cartQuantityInputUpdated","value","cartItemRemoved","items","filter","item","cartRemoved","actions","cartItemsReducer","reducer","history","createBrowserHistory","filterSlice","sortBy","sort","search","isEmpty","filterAdded","Object","keys","data","length","parent","filterRemoved","title","filterAllRemoved","sortSwitched","searchAdded","searchCleared","filterReducer","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","localStorageService","setTokens","refreshToken","expiresIn","accessToken","userId","expiresDate","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","getUserId","removeAuthData","removeItem","httpAuth","axios","create","baseURL","configFile","apiEndpoint","authService","register","a","post","login","email","password","returnSecureToken","refresh","grant_type","refresh_token","http","interceptors","request","use","config","isExpired","now","isFireBase","containSlash","test","url","slice","idToken","id_token","expires_in","localId","user_id","params","auth","headers","Authorization","Promise","reject","response","res","content","_id","map","key","status","console","log","httpService","get","put","delete","patch","templatePaintEndPoint","templatePaintService","update","fetchAll","id","templatesSlice","templatesRequested","templatesReceived","templatesRequestFailed","updateTemplateReceived","templateId","createTemplateReceived","removeTemplateReceived","templatesReducer","updateTemplateRequested","createAction","createTemplateRequested","removeTemplateRequested","productEndPoint","productService","fetchByCategory","category","productsSlice","dataLoaded","productsRequested","productsReceived","productsRequestFailed","buyProductsReceived","arr","pay","goodsSold","i","j","innerArray","paints","oldValue","productsReducer","buyProductsRequested","getFiltredProducts","filters","allProducts","products","tranformValues","array","obj","filterbyValue","initialArray","arrayValues","includes","fns","reduce","v","f","pipe","_","orderBy","str","toLowerCase","trim","userEndPoint","usersService","fetch","isLoggedIn","usersSLice","usersRequested","usersReceived","usersRequestFailed","authRequestSuccess","authRequestFailed","userCreated","userLoggedOut","authRequested","userUpdateSuccessed","usersReducer","userUpdateFailed","userUpdateRequested","getUserById","users","reviewsEndPoint","reviewsService","reviewsSlice","reviewsRequested","reviewsReceived","reviewsRequestFailed","createReviewReceived","reviewsReducer","createReviewRequested","getAverageRate","reviews","objReviews","curr","rate","newObj","forEach","averageRate","Math","round","total","ordersService","getOrders","equalTo","ordersSlice","ordersRequested","ordersReceived","ordersRequestFailed","ordersReducer","rootReducer","combineReducers","templates","itemsCart","orders","createStore","configureStore","NavProfile","currentUser","useSelector","useState","isOpen","setOpen","className","onClick","prevState","to","Quantity","onDecrement","onIncrement","onChange","min","max","setShowTip","quantityMin","quantityMax","isMaxCount","useEffect","type","target","Number","disabled","Tooltip","children","direction","showTip","active","setActive","onMouseLeave","CartItem","onIncrementQuantity","onDecrementQuantity","onRemove","itemSum","price","itemVolume","size","toFixed","getVolumeItem","src","img","imgPlaceHold","alt","role","volume","EmptyCart","EmptyGif","Finish","BasketPage","pathname","useLocation","dispatch","useDispatch","cartItems","totalSum","sum","costOfDelivery","amountPayable","finishMessage","setFinishMessage","handleChange","handleIncrementQuantity","getState","paint","handleDecrementQuantity","handleRemove","window","confirm","removeItemCart","message","TextField","label","placeholder","showPassword","setShowPassword","htmlFor","SelectField","defaultOption","options","optionName","TextAreaField","rows","React","memo","Button","color","icon","end","start","otherStyles","switchIcons","margin","defaultProps","optionsBrand","optionsProduct","optionsProductCategory","optionsScrubRating","optionsWos","validator","errors","validate","validateMethod","statusValidate","Array","isArray","fieldName","useForm","onSubmit","validatorConfig","form","setForm","setErrors","isValid","useCallback","handleSubmit","e","preventDefault","TemplateForm","useHistory","sortName","brand","product","productCategory","surface","FIoEU","sheenLevel","scrubRating","coverage","life","shelfLife","wos","vocLevels","amountCoat","countryOfOrigin","linkTTX","description","video","foto","important","advantages","goBack","CreateTemplatePage","newContent","uuidv4","EditTemplatePage","useParams","template","getTemplateById","JSON","stringify","TableHeader","onSort","selectedSort","columns","handleIcons","caretUp","caretDown","path","order","column","undefined","scope","TableBody","renderContent","component","Table","PaintsTable","onEdit","onDelete","edit","Pagination","pages","onPageChange","currentPage","page","usePagination","contentPerPage","initial","setCurrentPage","dataCrop","pageNumber","pageSize","startIndex","take","paginate","pageCount","ceil","range","handlePageChange","pageIndex","Loader","TemplateListPage","setSortBy","searchQuery","setSearchQuery","isLoadingTemplates","filteredUsers","indexOf","sortedPaints","ItemRate","mode","starCount","ProductCard","handelClick","imagePlaceholder","lowestPrice","CheckBoxField","checked","FilterSubmenu","submenu","show","initialData","getFilterByParent","setData","val","checkNameValue","checkNameTitle","RadioField","option","SortSubmenu","newArray","FilterItem","setShow","categoriesRef","useRef","handleOutsideClick","current","document","body","addEventListener","removeEventListener","ref","ProductsFilter","brands","Set","itemsWithActuallyBrands","templateProperties","ActiveFiltersSubitem","findName","list","ActiveFiltersItem","rest","ActiveFilters","isEmptyFilter","entries","ProductListPage","reviewsObj","RadioBtnField","RadioForm","arrObj","base","canSizes","sortKey","b","QuantityProductPage","setQuantity","maxQuantity","ProductHeader","itemPrice","onAddPaintCart","redirectToCart","isAddCart","countReviewsByProduct","averageRateByProduct","number","one","two","five","n","abs","getNoun","href","rel","ProductAdvantages","split","ProductDetails","values","ProductImportant","StarRating","onRating","star","rateValue","AddReview","onClose","user","setRate","handleRating","review","isRequired","timeConverter","time","timestamp","minutes","floor","year","getFullYear","month","getMonth","date","getDate","hour","getHours","getMinutes","Review","created","created_at","image","height","ReviewsList","Reviews","showAddField","setShowAddField","ProductPage","setAddCart","currentId","setCurrentId","getCurrentPaintObj","addItemsCart","enamel","primer","varnish","oilAndWaxes","woodFinish","Products","loadProductsList","AdminPage","SwiperSection","pagination","navigation","modules","Navigation","categoriesData","paintRoller","logo","Categories","HomePage","RegisterForm","isEmail","isCapitalSymbol","isContainDigit","LoginForm","isCapital","isDigit","redirect","location","from","Login","isLogin","formTitle","descriptionText","LogOut","CollapseWrapper","display","setDisaplay","collapseRef","newCollapse","BsCollapse","toggle","hide","OrdersList","Fragment","User","isBlockFileds","setBlockFileds","routes","rigthSide","public","protected","private","NavBar","collapse","setCollapse","countCartItems","closeMobileMenu","prop","ProtectedRoute","Component","render","props","Footer","Breadcrumb","crumbs","crumb","routeTo","join","pathName","Search","searchStore","BreadcrumbsAndSearchBar","App","store","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fbae6416.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartItemsSlice = createSlice({\n    name: \"cartItems\",\n    initialState: {\n        entities: [],\n        isLoading: false,\n        error: null\n    },\n    reducers: {\n        cartItemsRequested: (state) => {\n            state.isLoading = true;\n        },\n        cartItemsReceived: (state, action) => {\n            state.entities = action.payload;\n            state.isLoading = false;\n        },\n        cartItemsRequestFailed: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        },\n        cartItemsAdded: (state, action) => {\n            const index = state.entities.findIndex((x) => {\n                return x.paintId === action.payload.paintId;\n            });\n            if (index === -1) {\n                state.entities.push(action.payload);\n            } else {\n                const currentCount =\n                    state.entities[index].quantity + action.payload.quantity;\n                state.entities[index].quantity =\n                    currentCount > state.entities[index].count\n                        ? state.entities[index].count\n                        : currentCount;\n            }\n        },\n        cartQuantityIncremented: (state, action) => {\n            const item = state.entities.find(\n                (x) => x.paintId === action.payload\n            );\n            item.quantity++;\n        },\n        cartQuantityDecremented: (state, action) => {\n            const item = state.entities.find(\n                (x) => x.paintId === action.payload\n            );\n            item.quantity--;\n        },\n        cartQuantityInputUpdated: (state, action) => {\n            const item = state.entities.find(\n                (x) => x.paintId === action.payload.name\n            );\n            item.quantity = action.payload.value;\n        },\n        cartItemRemoved: (state, action) => {\n            const items = state.entities.filter(\n                (item) => item.paintId !== action.payload\n            );\n            state.entities = items;\n        },\n        cartRemoved: (state) => {\n            state.entities = [];\n        }\n    }\n});\n\nconst { actions, reducer: cartItemsReducer } = cartItemsSlice;\nconst {\n    cartItemsAdded,\n    cartQuantityIncremented,\n    cartQuantityDecremented,\n    cartQuantityInputUpdated,\n    cartItemRemoved,\n    cartRemoved\n} = actions;\n\nexport const addItemsCart = (payload) => (dispatch) => {\n    dispatch(cartItemsAdded(payload));\n};\nexport const incrementQuantity = (paintId) => (dispatch, getState) => {\n    const paint = getState().itemsCart.entities.find(\n        (item) => item.paintId === paintId\n    );\n    if (paint.quantity < paint.count) {\n        dispatch(cartQuantityIncremented(paintId));\n    }\n};\nexport const decrementQuantity = (paintId) => (dispatch, getState) => {\n    const paint = getState().itemsCart.entities.find(\n        (item) => item.paintId === paintId\n    );\n    if (paint.quantity > 1) {\n        dispatch(cartQuantityDecremented(paintId));\n    } else {\n        dispatch(cartItemRemoved(paintId));\n    }\n};\nexport const updateQuantityInput = (value) => (dispatch) => {\n    dispatch(cartQuantityInputUpdated(value));\n};\nexport const removeItemCart = (paintId) => (dispatch) => {\n    dispatch(cartItemRemoved(paintId));\n};\n\nexport const removeCart = () => (dispatch) => {\n    dispatch(cartRemoved());\n};\n\n// селекторы\nexport const getCartItems = () => (state) => state.itemsCart.entities;\nexport const getSumItem = (paintId) => (state) => {\n    if (state.itemsCart.entities) {\n        const item = state.itemsCart.entities.find(\n            (item) => item.paintId === paintId\n        );\n        return item.price * item.quantity;\n    } else {\n        return [];\n    }\n};\nexport const getVolumeItem = (paintId) => (state) => {\n    if (state.itemsCart.entities) {\n        const item = state.itemsCart.entities.find(\n            (item) => item.paintId === paintId\n        );\n        return (item.size * item.quantity).toFixed(1);\n    } else {\n        return [];\n    }\n};\n\nexport const getTotalSum = () => (state) => {\n    if (state.itemsCart.entities) {\n        return state.itemsCart.entities.reduce(\n            (sum, curr) => sum + curr.price * curr.quantity,\n            0\n        );\n    }\n};\nexport const getCartCount = () => (state) => {\n    if (state.itemsCart.entities) {\n        return state.itemsCart.entities.reduce(\n            (total, curr) => total + curr.quantity,\n            0\n        );\n    }\n};\n\nexport default cartItemsReducer;\n","import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\nexport default history;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport history from \"../utils/history\";\r\n\r\nconst filterSlice = createSlice({\r\n    name: \"filter\",\r\n    initialState: {\r\n        entities: {},\r\n        sortBy: { sort: \"asc\" },\r\n        search: \"\",\r\n        isLoading: false,\r\n        isEmpty: true,\r\n        error: null\r\n    },\r\n    reducers: {\r\n        filterAdded: (state, action) => {\r\n            if (Object.keys(action.payload.data).length !== 0) {\r\n                if (!state.entities[action.payload.parent]) {\r\n                    state.entities[action.payload.parent] = [];\r\n                }\r\n                state.entities[action.payload.parent] = action.payload.data;\r\n                state.isEmpty = false;\r\n            }\r\n        },\r\n        filterRemoved: (state, action) => {\r\n            const key = state.entities[action.payload.title];\r\n            key[action.payload.value] = false;\r\n        },\r\n        filterAllRemoved: (state) => {\r\n            state.entities = {};\r\n            state.isEmpty = true;\r\n        },\r\n        sortSwitched: (state, action) => {\r\n            state.sortBy = action.payload;\r\n        },\r\n        searchAdded: (state, action) => {\r\n            state.search = action.payload.search;\r\n        },\r\n        searchCleared: (state) => {\r\n            state.search = \"\";\r\n        }\r\n    }\r\n});\r\n\r\nconst { actions, reducer: filterReducer } = filterSlice;\r\nconst {\r\n    filterAdded,\r\n    filterRemoved,\r\n    filterAllRemoved,\r\n    sortSwitched,\r\n    searchAdded,\r\n    searchCleared\r\n} = actions;\r\n\r\nexport const addFilter = (payload) => async (dispatch) => {\r\n    dispatch(filterAdded(payload));\r\n};\r\nexport const addSearch = (payload) => async (dispatch) => {\r\n    dispatch(searchAdded(payload));\r\n    history.push(\"/products\");\r\n};\r\nexport const clearSearchStore = () => async (dispatch) => {\r\n    dispatch(searchCleared());\r\n};\r\n\r\nexport const removeFilter = (payload) => (dispatch) => {\r\n    dispatch(filterRemoved(payload));\r\n};\r\nexport const removeAllFilters = () => (dispatch) => {\r\n    dispatch(filterAllRemoved());\r\n};\r\nexport const switchSortBy = (payload) => (dispatch) => {\r\n    dispatch(sortSwitched(payload));\r\n};\r\n// селекторы\r\nexport const getFilterByParent = (parent) => (state) => {\r\n    return state.filter.entities[parent];\r\n};\r\n\r\nexport const getActiveFilters = () => (state) => {\r\n    const createArray = (obj) => {\r\n        return obj && Object.keys(obj).filter((key) => !!obj[key]);\r\n    };\r\n    const filters = state.filter.entities;\r\n    return Object.entries(filters).map((item) => [\r\n        item[0],\r\n        createArray(item[1])\r\n    ]);\r\n};\r\n\r\nexport const getFilterStatus = () => (state) => {\r\n    return state.filter.isEmpty;\r\n};\r\nexport const getSearch = () => (state) => {\r\n    return state.filter.search;\r\n};\r\n\r\nexport default filterReducer;\r\n","const TOKEN_KEY = \"jwt_token\";\nconst REFRESH_KEY = \"jwt_refresh-token\";\nconst EXPIRES_KEY = \"jwt_expires\";\nconst USERID_KEY = \"user-local-id\";\n\nexport function setTokens({\n    refreshToken,\n    expiresIn = 3600,\n    accessToken,\n    userId\n}) {\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\n    localStorage.setItem(TOKEN_KEY, accessToken);\n    localStorage.setItem(REFRESH_KEY, refreshToken);\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\n    localStorage.setItem(USERID_KEY, userId);\n}\nexport function getAccessToken() {\n    return localStorage.getItem(TOKEN_KEY);\n}\nexport function getRefreshToken() {\n    return localStorage.getItem(REFRESH_KEY);\n}\nexport function getTokenExpiresDate() {\n    return localStorage.getItem(EXPIRES_KEY);\n}\nexport function getUserId() {\n    return localStorage.getItem(USERID_KEY);\n}\nexport function removeAuthData() {\n    localStorage.removeItem(TOKEN_KEY);\n    localStorage.removeItem(REFRESH_KEY);\n    localStorage.removeItem(EXPIRES_KEY);\n    localStorage.removeItem(USERID_KEY);\n}\n\nconst localStorageService = {\n    setTokens,\n    getAccessToken,\n    getRefreshToken,\n    getTokenExpiresDate,\n    getUserId,\n    removeAuthData\n};\n\nexport default localStorageService;\n","import axios from \"axios\";\nimport configFile from \"../config.json\";\nimport localStorageService from \"./localStorage.service\";\n\nconst httpAuth = axios.create({\n    baseURL: configFile.apiEndpoint + \"/auth/\"\n});\n\nconst authService = {\n    register: async (payload) => {\n        const { data } = await httpAuth.post(`signUp`, payload);\n        return data;\n    },\n    login: async ({ email, password }) => {\n        const { data } = await httpAuth.post(`signInWithPassword`, {\n            email,\n            password,\n            returnSecureToken: true\n        });\n        return data;\n    },\n    refresh: async () => {\n        const { data } = await httpAuth.post(\"token\", {\n            grant_type: \"refresh_token\",\n            refresh_token: localStorageService.getRefreshToken()\n        });\n        return data;\n    }\n};\nexport default authService;\n","import axios from \"axios\";\n\nimport configFile from \"../config.json\";\nimport authService from \"./auth.service\";\n\nimport localStorageService from \"./localStorage.service\";\n\nconst http = axios.create({\n    baseURL: configFile.apiEndpoint\n});\n\nhttp.interceptors.request.use(\n    async function (config) {\n        const expiresDate = localStorageService.getTokenExpiresDate();\n        const refreshToken = localStorageService.getRefreshToken();\n        const isExpired = refreshToken && expiresDate < Date.now();\n\n        if (configFile.isFireBase) {\n            const containSlash = /\\/$/gi.test(config.url);\n            config.url =\n                (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\n\n            if (isExpired) {\n                const data = await authService.refresh();\n\n                localStorageService.setTokens({\n                    refreshToken: data.refresh_token,\n                    idToken: data.id_token,\n                    expiresIn: data.expires_in,\n                    localId: data.user_id\n                });\n            }\n            const accessToken = localStorageService.getAccessToken();\n            if (accessToken) {\n                config.params = { ...config.params, auth: accessToken };\n            }\n        } else {\n            if (isExpired) {\n                const data = await authService.refresh();\n                localStorageService.setTokens(data);\n            }\n            const accessToken = localStorageService.getAccessToken();\n            if (accessToken) {\n                config.headers = {\n                    ...config.headers,\n                    Authorization: `Bearer ${accessToken}`\n                };\n            }\n        }\n        return config;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);\nfunction transormData(data) {\n    return data && !data._id\n        ? Object.keys(data).map((key) => ({\n              ...data[key]\n          }))\n        : data;\n}\nhttp.interceptors.response.use(\n    (res) => {\n        if (configFile.isFireBase) {\n            res.data = { content: transormData(res.data) };\n        }\n        res.data = { content: res.data };\n        return res;\n    },\n    function (error) {\n        const expectedErrors =\n            error.response &&\n            error.response.status >= 400 &&\n            error.response.status < 500;\n\n        if (!expectedErrors) {\n            console.log(error);\n        }\n        return Promise.reject(error);\n    }\n);\nconst httpService = {\n    get: http.get,\n    post: http.post,\n    put: http.put,\n    delete: http.delete,\n    patch: http.patch\n};\nexport default httpService;\n","import httpService from \"./http.service\";\n\nconst templatePaintEndPoint = `template/`;\n\nconst templatePaintService = {\n    update: async (content) => {\n        const { data } = await httpService.patch(\n            templatePaintEndPoint + content._id, // при MONGO заменить на _id\n            content\n        );\n        return data;\n    },\n    // get: async (id) => {\n    //     const { data } = await httpService.get(templatePaintEndPoint + id);\n    //     return data;\n    // },\n    fetchAll: async () => {\n        const { data } = await httpService.get(templatePaintEndPoint);\n        return data;\n    },\n    create: async (content) => {\n        const { data } = await httpService.post(templatePaintEndPoint, content);\n        return data;\n    },\n    delete: async (id) => {\n        const { data } = await httpService.delete(templatePaintEndPoint + id);\n        return data;\n    }\n};\nexport default templatePaintService;\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport templatePaintService from \"../services/templatePaint.services\";\nimport history from \"../utils/history\";\n\nconst templatesSlice = createSlice({\n    name: \"templates\",\n    initialState: {\n        entities: null,\n        isLoading: false,\n        error: null\n    },\n    reducers: {\n        templatesRequested: (state) => {\n            state.isLoading = true;\n        },\n        templatesReceived: (state, action) => {\n            state.entities = action.payload;\n            state.isLoading = false;\n        },\n        templatesRequestFailed: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        },\n        updateTemplateReceived: (state, action) => {\n            const index = state.entities.findIndex((x) => {\n                return x.templateId === action.payload.templateId;\n            });\n            state.entities[index] = action.payload;\n        },\n        createTemplateReceived: (state, action) => {\n            state.entities.push(action.payload);\n        },\n        removeTemplateReceived: (state, action) => {\n            state.entities = state.entities.filter(\n                (x) => x._id !== action.payload\n            );\n        }\n    }\n});\n\nconst { actions, reducer: templatesReducer } = templatesSlice;\nconst {\n    templatesRequested,\n    templatesReceived,\n    templatesRequestFailed,\n    updateTemplateReceived,\n    createTemplateReceived,\n    removeTemplateReceived\n} = actions;\nconst updateTemplateRequested = createAction(\n    \"templates/updateTemplateRequested\"\n);\nconst createTemplateRequested = createAction(\n    \"templates/createTemplateRequested\"\n);\nconst removeTemplateRequested = createAction(\n    \"templates/removeTemplateRequested\"\n);\n\nexport const loadTemplatesList = () => async (dispatch) => {\n    dispatch(templatesRequested());\n    try {\n        const { content } = await templatePaintService.fetchAll();\n        dispatch(templatesReceived(content));\n    } catch (error) {\n        dispatch(templatesRequestFailed(error.message));\n    }\n};\nexport const createTemplate = (payload) => async (dispatch) => {\n    dispatch(createTemplateRequested());\n    try {\n        const newContent = { ...payload, templateId: uuidv4() };\n        const { content } = await templatePaintService.create(newContent);\n\n        dispatch(createTemplateReceived(content));\n        history.push(`/admin/templates`);\n    } catch (error) {\n        dispatch(templatesRequestFailed);\n    }\n};\n\nexport const updateTemplate = (payload) => async (dispatch) => {\n    dispatch(updateTemplateRequested());\n    try {\n        const { content } = await templatePaintService.update(payload);\n        dispatch(updateTemplateReceived(content));\n        history.push(`/admin/templates`);\n    } catch (error) {\n        dispatch(templatesRequestFailed(error.message));\n    }\n};\nexport const removeTemplate = (templateId) => async (dispatch) => {\n    dispatch(removeTemplateRequested());\n    try {\n        const { content } = await templatePaintService.delete(templateId);\n        if (!content) {\n            dispatch(removeTemplateReceived(templateId));\n        }\n    } catch (error) {\n        dispatch(templatesRequestFailed(error.message));\n    }\n};\n\nexport const getTemplates = () => (state) => state.templates.entities;\nexport const getTemplatesLoadingStatus = () => (state) =>\n    state.templates.isLoading;\n\nexport const getTemplateById = (id) => (state) => {\n    if (state.templates.entities) {\n        return state.templates.entities.find((item) => item._id === id);\n    }\n};\n\nexport default templatesReducer;\n","import httpService from \"./http.service\";\r\nimport localStorageService from \"./localStorage.service\";\r\n\r\nconst productEndPoint = `product/`;\r\n\r\nconst productService = {\r\n    fetchAll: async () => {\r\n        const { data } = await httpService.get(productEndPoint);\r\n        return data;\r\n    },\r\n    fetchByCategory: async (category) => {\r\n        const { data } = await httpService.get(productEndPoint + category);\r\n        return data;\r\n    },\r\n    update: async (payload) => {\r\n        const userId = localStorageService.getUserId();\r\n        const { data } = await httpService.post(productEndPoint, {\r\n            ...payload,\r\n            userId\r\n        });\r\n        return data;\r\n    }\r\n};\r\nexport default productService;\r\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\r\nimport productService from \"../services/product.service\";\r\nimport { pipe } from \"../utils/withoutLodash\";\r\nimport _ from \"lodash\";\r\n\r\nconst productsSlice = createSlice({\r\n    name: \"products\",\r\n    initialState: {\r\n        entities: [],\r\n        isLoading: false,\r\n        error: null,\r\n        dataLoaded: false\r\n    },\r\n    reducers: {\r\n        productsRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        productsReceived: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.isLoading = false;\r\n            state.dataLoaded = true;\r\n        },\r\n        productsRequestFailed: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        buyProductsReceived: (state, action) => {\r\n            const arr = state.entities;\r\n            const pay = action.payload.goodsSold;\r\n\r\n            for (let i = 0; i < arr.length; i++) {\r\n                for (let j = 0; j < pay.length; j++) {\r\n                    if (arr[i].templateId === pay[j].templateId) {\r\n                        const innerArray = arr[i].paints;\r\n                        const oldValue =\r\n                            innerArray[\r\n                                innerArray.findIndex(\r\n                                    (item) => item.paintId === pay[j].paintId\r\n                                )\r\n                            ];\r\n                        oldValue.count = oldValue.count - pay[j].quantity;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nconst { actions, reducer: productsReducer } = productsSlice;\r\nconst {\r\n    productsRequested,\r\n    productsReceived,\r\n    productsRequestFailed,\r\n    buyProductsReceived\r\n} = actions;\r\n\r\nconst buyProductsRequested = createAction(\"products/buyProductsRequested\");\r\n\r\nexport const loadProductsList = (category) => async (dispatch) => {\r\n    dispatch(productsRequested());\r\n    if (category) {\r\n        try {\r\n            const { content } = await productService.fetchByCategory(category);\r\n            dispatch(productsReceived(content));\r\n        } catch (error) {\r\n            dispatch(productsRequestFailed(error.message));\r\n        }\r\n    } else {\r\n        try {\r\n            const { content } = await productService.fetchAll();\r\n            dispatch(productsReceived(content));\r\n        } catch (error) {\r\n            dispatch(productsRequestFailed(error.message));\r\n        }\r\n    }\r\n};\r\nexport const buyProducts = (payload) => async (dispatch) => {\r\n    dispatch(buyProductsRequested());\r\n    try {\r\n        const { content } = await productService.update(payload);\r\n        if (content) {\r\n            dispatch(buyProductsReceived(payload));\r\n        }\r\n    } catch (error) {\r\n        dispatch(productsRequestFailed(error.message));\r\n    }\r\n};\r\n\r\n// Селекторы\r\nexport const getProducts = () => (state) => state.products.entities;\r\n\r\nexport const getFiltredProducts = () => (state) => {\r\n    const filters = state.filter.entities;\r\n    const allProducts = state.products.entities;\r\n    const search = state.filter.search;\r\n    const sort = state.filter.sortBy.sort;\r\n    const createArray = (obj) => {\r\n        return obj && Object.keys(obj).filter((key) => !!obj[key]);\r\n    };\r\n    function tranformValues(array, value) {\r\n        return createArray(array[value]);\r\n    }\r\n\r\n    function filterbyValue(initialArray, value, obj) {\r\n        const arrayValues = tranformValues(obj, value);\r\n        return arrayValues && arrayValues.length !== 0\r\n            ? initialArray.filter((item) => arrayValues.includes(item[value]))\r\n            : initialArray;\r\n    }\r\n    function searchByValue(initialArray, value, str) {\r\n        return str\r\n            ? initialArray.filter((item) =>\r\n                  item[value].toLowerCase().includes(str.toLowerCase().trim())\r\n              )\r\n            : initialArray;\r\n    }\r\n\r\n    // фильтр по брэнду\r\n    function filterByBrand(array) {\r\n        return filterbyValue(array, \"brand\", filters);\r\n    }\r\n    // фильтр по использованию внутри / снаружи\r\n    function filterByUse(array) {\r\n        return filterbyValue(array, \"FIoEU\", filters);\r\n    }\r\n    // фильтр по использованию полю Search\r\n    function filterBySearchField(array) {\r\n        return searchByValue(array, \"sortName\", search);\r\n    }\r\n    // фильтр по использованию полю Search\r\n    function sortProductsByPrice(array) {\r\n        return _.orderBy(array, [\"lowestPrice\"], [sort]);\r\n    }\r\n\r\n    return pipe(\r\n        sortProductsByPrice,\r\n        filterByBrand,\r\n        filterByUse,\r\n        filterBySearchField\r\n    )(allProducts);\r\n};\r\n\r\nexport const getProductsLoadingStatus = () => (state) =>\r\n    state.products.isLoading;\r\n\r\nexport const getProductById = (id) => (state) => {\r\n    if (state.products.entities) {\r\n        return state.products.entities.find((item) => item.templateId === id);\r\n    }\r\n};\r\nexport const getProductArrayPaints = (id) => (state) => {\r\n    if (state.products.entities) {\r\n        const arrPaints = state.products.entities.find(\r\n            (item) => item.templateId === id\r\n        ).paints;\r\n\r\n        const arrObj = {};\r\n        for (let i = 0; i < arrPaints.length; i++) {\r\n            arrObj[arrPaints[i].base]\r\n                ? arrObj[arrPaints[i].base].push(arrPaints[i])\r\n                : (arrObj[arrPaints[i].base] = [arrPaints[i]]);\r\n        }\r\n        return arrObj;\r\n    }\r\n};\r\nexport const getDataStatus = () => (state) => state.products.dataLoaded;\r\n\r\n// получить список всех брендов\r\nexport const getBrandList = () => (state) => {\r\n    if (state.products.entities) {\r\n        const arr = state.products.entities.map((item) => item.brand);\r\n        return [...new Set(arr)];\r\n    }\r\n};\r\n\r\nexport default productsReducer;\r\n","export const pipe =\n    (...fns) =>\n    (x) =>\n        fns.reduce((v, f) => f(v), x);\n","import httpService from \"./http.service\";\nimport localStorageService from \"./localStorage.service\";\n\nconst userEndPoint = \"user/\";\n\nconst usersService = {\n    fetch: async () => {\n        const { data } = await httpService.get(userEndPoint);\n        return data;\n    },\n    create: async (payload) => {\n        const { data } = await httpService.post(userEndPoint, payload);\n        return data;\n    },\n    update: async (payload) => {\n        const { data } = await httpService.patch(\n            userEndPoint + localStorageService.getUserId(),\n            payload\n        );\n        return data;\n    }\n};\nexport default usersService;\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport authService from \"../services/auth.service\";\nimport localStorageService from \"../services/localStorage.service\";\nimport usersService from \"../services/users.service\";\nimport history from \"../utils/history\";\n\nconst initialState = localStorageService.getAccessToken()\n    ? {\n          entities: null,\n          isLoading: true,\n          error: null,\n          auth: { userId: localStorageService.getUserId() },\n          isLoggedIn: true,\n          dataLoaded: false\n      }\n    : {\n          entities: null,\n          isLoading: false,\n          error: null,\n          auth: null,\n          isLoggedIn: false,\n          dataLoaded: false\n      };\n\nconst usersSLice = createSlice({\n    name: \"users\",\n    initialState,\n    reducers: {\n        usersRequested: (state) => {\n            state.isLoading = true;\n        },\n        usersReceived: (state, action) => {\n            state.entities = action.payload;\n            state.isLoading = false;\n            state.dataLoaded = true;\n        },\n        usersRequestFailed: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        },\n        authRequestSuccess: (state, action) => {\n            state.auth = action.payload;\n            state.isLoggedIn = true;\n        },\n        authRequestFailed: (state, action) => {\n            state.error = action.payload;\n        },\n        userCreated: (state, action) => {\n            state.entities.push(action.payload);\n        },\n        userLoggedOut: (state) => {\n            state.entities = null;\n            state.isLoggedIn = false;\n            state.auth = null;\n            state.dataLoaded = false;\n        },\n        authRequested: (state) => {\n            state.error = null;\n        },\n        userUpdateSuccessed: (state, action) => {\n            state.entities[\n                state.entities.findIndex(\n                    (item) => item._id === action.payload._id\n                )\n            ] = action.payload;\n        }\n    }\n});\n\nconst { reducer: usersReducer, actions } = usersSLice;\nconst {\n    usersRequested,\n    usersReceived,\n    usersRequestFailed,\n    authRequestSuccess,\n    userLoggedOut,\n    authRequested,\n    authRequestFailed,\n    userUpdateSuccessed\n} = actions;\nconst userUpdateFailed = createAction(\"users/userUpdateFailed\");\nconst userUpdateRequested = createAction(\"users/userUpdateRequested\");\nexport const signUp = (payload) => async (dispatch) => {\n    dispatch(authRequested());\n    try {\n        const data = await authService.register(payload);\n        localStorageService.setTokens(data);\n        dispatch(authRequestSuccess({ userId: data.userId }));\n        history.push(\"/\");\n    } catch (error) {\n        dispatch(authRequestFailed(error.message));\n    }\n};\n\nexport const login =\n    ({ data, redirect }) =>\n    async (dispatch) => {\n        const { email, password } = data;\n        dispatch(authRequested());\n        try {\n            const content = await authService.login({ email, password });\n            localStorageService.setTokens(content);\n            dispatch(authRequestSuccess({ userId: content.userId }));\n            history.push(redirect);\n        } catch (error) {\n            dispatch(authRequestFailed(error.message));\n        }\n    };\n\nexport const loadUsers = () => async (dispatch) => {\n    dispatch(usersRequested());\n    try {\n        const { content } = await usersService.fetch();\n        dispatch(usersReceived(content));\n    } catch (error) {\n        dispatch(usersRequestFailed(error.message));\n    }\n};\n\nexport const logOut = () => (dispatch) => {\n    localStorageService.removeAuthData();\n    dispatch(userLoggedOut());\n    history.push(\"/\");\n};\n\nexport const updateUser = (payload) => async (dispatch) => {\n    dispatch(userUpdateRequested());\n    try {\n        const { content } = await usersService.update(payload);\n        dispatch(userUpdateSuccessed(content));\n    } catch (error) {\n        dispatch(userUpdateFailed(error.message));\n    }\n};\n\nexport const getIsLoggedIn = () => (state) => state.users.isLoggedIn;\nexport const getDataStatus = () => (state) => state.users.dataLoaded;\n\nexport const getCurrentUserData = () => (state) => {\n    if (state.users.auth) {\n        return state.users.entities\n            ? state.users.entities.find(\n                  (item) => item._id === state.users.auth.userId\n              )\n            : null;\n    } else {\n        return {};\n    }\n};\nexport const getCurrentUserId = () => (state) => state.users.auth.userId;\n\nexport const getUserById = (userId) => (state) => {\n    if (state.users.entities) {\n        return state.users.entities.find((item) => item._id === userId);\n    }\n};\n\nexport default usersReducer;\n","import httpService from \"./http.service\";\r\n\r\nconst reviewsEndPoint = `review/`;\r\n\r\nconst reviewsService = {\r\n    fetchAll: async () => {\r\n        const { data } = await httpService.get(reviewsEndPoint);\r\n        return data;\r\n    },\r\n    create: async (payload) => {\r\n        const { data } = await httpService.post(reviewsEndPoint, payload);\r\n        return data;\r\n    }\r\n    // getReviewsById: async (templateId) => {\r\n    //     const { data } = await httpService.get(reviewsEndPoint, {\r\n    //         params: {\r\n    //             orderBy: \"templateId\",\r\n    //             equalTo: `${templateId}`\r\n    //         }\r\n    //     });\r\n    //     return data;\r\n    // }\r\n};\r\nexport default reviewsService;\r\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\r\nimport reviewsService from \"../services/reviews.service\";\r\n\r\nconst reviewsSlice = createSlice({\r\n    name: \"reviews\",\r\n    initialState: {\r\n        entities: [],\r\n        isLoading: false,\r\n        error: null\r\n    },\r\n    reducers: {\r\n        reviewsRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        reviewsReceived: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        reviewsRequestFailed: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        createReviewReceived: (state, action) => {\r\n            state.entities.push(action.payload);\r\n        }\r\n    }\r\n});\r\n\r\nconst { actions, reducer: reviewsReducer } = reviewsSlice;\r\nconst {\r\n    createReviewReceived,\r\n    reviewsRequestFailed,\r\n    reviewsRequested,\r\n    reviewsReceived\r\n} = actions;\r\n\r\nconst createReviewRequested = createAction(\"reviews/createReviewRequested\");\r\n\r\nexport const loadReviewsList = () => async (dispatch) => {\r\n    dispatch(reviewsRequested());\r\n    try {\r\n        const { content } = await reviewsService.fetchAll();\r\n        dispatch(reviewsReceived(content));\r\n    } catch (error) {\r\n        dispatch(reviewsRequestFailed(error.message));\r\n    }\r\n};\r\n\r\nexport const createReview = (payload) => async (dispatch) => {\r\n    dispatch(createReviewRequested());\r\n    try {\r\n        const { content } = await reviewsService.create(payload);\r\n        dispatch(createReviewReceived(content));\r\n    } catch (error) {\r\n        dispatch(reviewsRequestFailed(error.message));\r\n    }\r\n};\r\n\r\nexport const getReviews = () => (state) => state.reviews.entities;\r\nexport const getReviewsLoadingStatus = () => (state) => state.reviews.isLoading;\r\n\r\nexport const getReviewsById = (id) => (state) => {\r\n    if (state.reviews.entities) {\r\n        return state.reviews.entities.filter((item) => item.templateId === id);\r\n    }\r\n};\r\n\r\nexport const getAverageRate = () => (state) => {\r\n    if (state.reviews.entities) {\r\n        const objReviews = state.reviews.entities.reduce((obj, curr) => {\r\n            if (!obj[curr.templateId]) {\r\n                obj[curr.templateId] = [];\r\n            }\r\n            obj[curr.templateId].push(curr.rate);\r\n            return obj;\r\n        }, {});\r\n        const newObj = {};\r\n        Object.keys(objReviews).forEach((key) => {\r\n            const length = objReviews[key].length;\r\n            const averageRate = Math.round(\r\n                objReviews[key].reduce((total, curr) => total + curr, 0) /\r\n                    length\r\n            );\r\n            return (newObj[key] = { averageRate, length });\r\n        });\r\n        return newObj;\r\n    }\r\n};\r\n\r\nexport default reviewsReducer;\r\n","import httpService from \"./http.service\";\r\nimport localStorageService from \"./localStorage.service\";\r\n\r\nconst ordersEndPoint = `order/`;\r\n\r\nconst ordersService = {\r\n    getOrders: async () => {\r\n        const userId = localStorageService.getUserId();\r\n        const { data } = await httpService.get(ordersEndPoint, {\r\n            params: {\r\n                orderBy: \"userId\",\r\n                equalTo: `${userId}`\r\n            }\r\n        });\r\n        return data;\r\n    }\r\n};\r\nexport default ordersService;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport ordersService from \"../services/order.service\";\r\n\r\n// import templatePaintService from \"../services/templatePaint.services\";\r\n// import history from \"../utils/history\";\r\n\r\nconst ordersSlice = createSlice({\r\n    name: \"orders\",\r\n    initialState: {\r\n        entities: null,\r\n        isLoading: false,\r\n        error: null\r\n    },\r\n    reducers: {\r\n        ordersRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        ordersReceived: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        ordersRequestFailed: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        }\r\n    }\r\n});\r\n\r\nconst { actions, reducer: ordersReducer } = ordersSlice;\r\nconst { ordersRequested, ordersReceived, ordersRequestFailed } = actions;\r\n\r\nexport const loadOrdersList = () => async (dispatch) => {\r\n    dispatch(ordersRequested());\r\n    try {\r\n        const { content } = await ordersService.getOrders();\r\n        dispatch(ordersReceived(content));\r\n    } catch (error) {\r\n        dispatch(ordersRequestFailed(error.message));\r\n    }\r\n};\r\nexport const getOrders = () => (state) => state.orders.entities;\r\nexport const getOrdersLoadingStatus = () => (state) => state.orders.isLoading;\r\n\r\nexport default ordersReducer;\r\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport cartItemsReducer from \"./cartItems\";\nimport filterReducer from \"./filters\";\nimport templatesReducer from \"./templates\";\nimport productsReducer from \"./products\";\nimport usersReducer from \"./users\";\nimport reviewsReducer from \"./reviews\";\nimport ordersReducer from \"./orders\";\n\nconst rootReducer = combineReducers({\n    users: usersReducer,\n    products: productsReducer,\n    templates: templatesReducer,\n    itemsCart: cartItemsReducer,\n    filter: filterReducer,\n    reviews: reviewsReducer,\n    orders: ordersReducer\n});\n\nfunction createStore() {\n    return configureStore({\n        reducer: rootReducer\n    });\n}\n\nexport default createStore;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getCurrentUserData } from \"../../store/users\";\n\nconst NavProfile = () => {\n    const currentUser = useSelector(getCurrentUserData());\n    const [isOpen, setOpen] = useState(false);\n\n    const toggleMenu = () => {\n        setOpen((prevState) => !prevState);\n    };\n\n    if (!currentUser) return \"Loading...\";\n    return (\n        <div className=\"dropdown \" onClick={toggleMenu}>\n            <div className=\"btn dropdown-toggle  d-flex align-items-center\">\n                <div className=\"text-white nav-link\">\n                    <i className=\"bi bi-person-check me-2\"></i>\n                    {currentUser.name}\n                </div>\n            </div>\n            <div className={`w-100 dropdown-menu ` + (isOpen ? \"show\" : \"\")}>\n                <Link to={`/user/${currentUser._id}`} className=\"dropdown-item\">\n                    Profile\n                </Link>\n                <Link to=\"/logout\" className=\"dropdown-item\">\n                    Logout\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default NavProfile;\n","export default __webpack_public_path__ + \"static/media/img-placehold.75683723.jpg\";","import Quantity from \"./quantity\";\r\nexport default Quantity;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./quantity.css\";\r\n\r\nconst Quantity = ({\r\n    onDecrement,\r\n    onIncrement,\r\n    value,\r\n    onChange,\r\n    name,\r\n    min,\r\n    max,\r\n    setShowTip\r\n}) => {\r\n    const quantityMin = min || 1;\r\n    const quantityMax = max || 199;\r\n\r\n    const isMaxCount = value === quantityMax;\r\n\r\n    const handleChange = ({ target }) => {\r\n        if (target.value >= quantityMin && target.value < quantityMax) {\r\n            const value = Number(target.value);\r\n            onChange({ value: value, name: target.name });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isMaxCount) {\r\n            setShowTip(true);\r\n        } else {\r\n            setShowTip(false);\r\n        }\r\n    }, [isMaxCount]);\r\n\r\n    return (\r\n        <div className=\"quantityCart  mb-3 mb-lg-0\">\r\n            <div className=\"border d-flex align-items-center\">\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={name ? () => onDecrement(name) : onDecrement}\r\n                >\r\n                    <i className=\"bi bi-dash-lg mx-auto\"></i>\r\n                </button>\r\n                <input\r\n                    type=\"number\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    name={name}\r\n                    min={quantityMin}\r\n                    max={quantityMax}\r\n                />\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={name ? () => onIncrement(name) : onIncrement}\r\n                    disabled={isMaxCount}\r\n                >\r\n                    <i className=\"bi bi-plus-lg mx-auto\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nQuantity.propTypes = {\r\n    onDecrement: PropTypes.func.isRequired,\r\n    onIncrement: PropTypes.func.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string,\r\n    min: PropTypes.number,\r\n    max: PropTypes.number,\r\n    setShowTip: PropTypes.func\r\n};\r\nexport default Quantity;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./tooltip.css\";\r\n\r\nconst Tooltip = ({ children, direction, content, showTip }) => {\r\n    const [active, setActive] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setActive(showTip);\r\n    }, [showTip]);\r\n\r\n    const hideTip = () => {\r\n        setActive(false);\r\n    };\r\n    return (\r\n        <div className=\"Tooltip-Wrapper\" onMouseLeave={hideTip}>\r\n            {children}\r\n            {active && (\r\n                <div className={`Tooltip-Tip ${direction || \"top\"}`}>\r\n                    {content}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nTooltip.propTypes = {\r\n    children: PropTypes.object,\r\n    direction: PropTypes.string,\r\n    content: PropTypes.string,\r\n    showTip: PropTypes.bool\r\n};\r\nexport default Tooltip;\r\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport imgPlaceHold from \"../../assets/images/img-placehold.jpg\";\nimport { getSumItem, getVolumeItem } from \"../../store/cartItems\";\nimport Quantity from \"../common/quantity\";\nimport Tooltip from \"../common/tooltip/tooltip\";\n\nconst CartItem = ({\n    item,\n    onChange,\n    onIncrementQuantity,\n    onDecrementQuantity,\n    onRemove\n}) => {\n    const itemSum = useSelector(getSumItem(item.paintId));\n    const itemVolume = useSelector(getVolumeItem(item.paintId));\n\n    const [showTip, setShowTip] = useState(false);\n\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"row g-0\">\n                <div className=\"col-md-4\">\n                    <img\n                        src={item.img ? item.img : imgPlaceHold}\n                        className=\"img-fluid p-2 p-lg-3\"\n                        alt=\"...\"\n                    />\n                </div>\n                <div className=\"col-md-8\">\n                    <div className=\"card-body\">\n                        <div className=\"text-end fs-6 mb-2\">\n                            <a\n                                role=\"button\"\n                                className=\"text-decoration-none ms-2 text-danger\"\n                                onClick={() => onRemove(item.paintId)}\n                            >\n                                <i className=\"bi bi-trash me-3\"></i>\n                            </a>\n                        </div>\n                        <Link\n                            to={`/products/${item.templateId}`}\n                            className=\"text-decoration-none\"\n                        >\n                            <h6 className=\"card-title text-decoration-none text-muted\">\n                                {item.name}\n                            </h6>\n                        </Link>\n\n                        <div className=\"d-flex flex-column align-items-center flex-lg-row justify-content-lg-between \">\n                            <div className=\"mb-2\">\n                                <strong className=\"fs-3 me-2 text-nowrap\">\n                                    {itemSum} ₽\n                                </strong>\n\n                                <strong className=\"fs-5 text-muted me-lg-auto text-nowrap\">\n                                    за &nbsp;{itemVolume}\n                                    {item.volume}\n                                </strong>\n                            </div>\n\n                            <Tooltip\n                                content=\"Добавлено максимальное количество\"\n                                direction=\"top\"\n                                showTip={showTip}\n                            >\n                                <Quantity\n                                    onChange={onChange}\n                                    onDecrement={onDecrementQuantity}\n                                    onIncrement={onIncrementQuantity}\n                                    value={item.quantity}\n                                    max={item.count}\n                                    name={item.paintId}\n                                    setShowTip={setShowTip}\n                                />\n                            </Tooltip>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nCartItem.propTypes = {\n    item: PropTypes.object,\n    onChange: PropTypes.func,\n    onIncrementQuantity: PropTypes.func,\n    onDecrementQuantity: PropTypes.func,\n    onRemove: PropTypes.func\n};\nexport default CartItem;\n","export default __webpack_public_path__ + \"static/media/empty-basket.07bd4631.gif\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport EmptyGif from \"../../assets/images/empty-basket.gif\";\n\nconst EmptyCart = () => {\n    return (\n        <div className=\"container\">\n            <div className=\"row mt-5 d-flex align-items-center justify-content-center\">\n                <div className=\"col-md-6 text-center\">\n                    <img\n                        src={EmptyGif}\n                        alt=\"пустая корзина\"\n                        className=\"img-fluid\"\n                    />\n                    <h2 className=\" text-muted mb-4\">Корзина пуста</h2>\n                    <Link className=\"text-muted\" to=\"/products\">\n                        Перейти к выбору товаров\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EmptyCart;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCurrentUserId } from \"../../store/users\";\r\n\r\nconst Finish = () => {\r\n    const userId = useSelector(getCurrentUserId());\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center text-center mt-3\">\r\n                <div className=\"col-md-8\">\r\n                    <h3 className=\"bg-success p-md-5 m-md-5 p-1 m-1 border\">\r\n                        Благодарим за заказ! В течение получаса с вами свяжется\r\n                        наш менеджер для уточнения деталей. Статус выполнения\r\n                        заказа вы можете отслеживать в личном кабинете.\r\n                    </h3>\r\n                    <div>\r\n                        <Link className=\"text-muted\" to={`/user/${userId}`}>\r\n                            Перейти в личный кабинет\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Finish;\r\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport {\n    decrementQuantity,\n    getCartItems,\n    getTotalSum,\n    incrementQuantity,\n    removeCart,\n    removeItemCart,\n    updateQuantityInput\n} from \"../../../store/cartItems\";\nimport { buyProducts } from \"../../../store/products\";\nimport { getIsLoggedIn } from \"../../../store/users\";\nimport CartItem from \"../../ui/cartItem\";\nimport EmptyCart from \"../../ui/emptyCart\";\nimport Finish from \"../../ui/finish\";\n\nconst BasketPage = () => {\n    const { pathname } = useLocation();\n    const freeShippingCondition = 30000;\n    const dispatch = useDispatch();\n    const cartItems = useSelector(getCartItems());\n    const totalSum = useSelector(getTotalSum());\n    const costOfDelivery = totalSum >= freeShippingCondition ? 0 : 1500;\n    const amountPayable = totalSum + costOfDelivery;\n    const [finishMessage, setFinishMessage] = useState(false);\n\n    const isLoggedIn = useSelector(getIsLoggedIn());\n\n    const handleChange = (target) => {\n        dispatch(updateQuantityInput(target));\n    };\n    const handleIncrementQuantity = (id) => {\n        dispatch(incrementQuantity(id));\n    };\n    const handleDecrementQuantity = (id) => {\n        dispatch(decrementQuantity(id));\n    };\n\n    const handleRemove = (paintId) => {\n        if (\n            window.confirm(\"Вы действительно хотите удалить товар из корзины?\")\n        ) {\n            dispatch(removeItemCart(paintId));\n        }\n    };\n\n    const handleBuy = () => {\n        dispatch(buyProducts({ goodsSold: cartItems, amountPayable }));\n        dispatch(removeCart());\n        setFinishMessage(true);\n    };\n\n    useEffect(() => {\n        if (finishMessage) {\n            setFinishMessage(false);\n        }\n    }, [pathname]);\n    if (cartItems.length === 0 && !finishMessage) return <EmptyCart />;\n    if (finishMessage) return <Finish />;\n    return (\n        <section>\n            <div className=\"container\">\n                <div className=\"row mb-2\">\n                    <div className=\"col-12\">\n                        <h1>Корзина</h1>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-8\">\n                        {cartItems.map((item) => (\n                            <CartItem\n                                key={item.paintId}\n                                item={item}\n                                onChange={handleChange}\n                                onIncrementQuantity={handleIncrementQuantity}\n                                onDecrementQuantity={handleDecrementQuantity}\n                                onRemove={handleRemove}\n                            />\n                        ))}\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card p-2 mb-4\">\n                            <table className=\"table\">\n                                <tbody>\n                                    <tr>\n                                        <td>Товары на сумму</td>\n                                        <td className=\"text-end\">\n                                            {totalSum} ₽\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Стоимость доставки</td>\n                                        <td className=\"text-end\">\n                                            {costOfDelivery === 0\n                                                ? \"Бесплатно\"\n                                                : `${costOfDelivery} ₽`}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Итого</td>\n                                        <td className=\"text-end\">\n                                            {amountPayable} ₽\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            {!isLoggedIn ? (\n                                <p>\n                                    Оформить заказ могут только\n                                    зарегистрированные пользователи. Пожалуйста\n                                    &nbsp;\n                                    <Link to=\"/login\" className=\"text-muted\">\n                                        войдите\n                                    </Link>\n                                    &nbsp; или &nbsp;\n                                    <Link to=\"/register\" className=\"text-muted\">\n                                        зарегистрируйтесь.\n                                    </Link>\n                                </p>\n                            ) : (\n                                <button\n                                    className=\"btn btn-danger w-100\"\n                                    onClick={handleBuy}\n                                >\n                                    Оформить\n                                </button>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default BasketPage;\n","import BasketPage from \"./basketPage\";\nexport default BasketPage;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({\n    type,\n    label,\n    placeholder,\n    name,\n    value,\n    onChange,\n    error,\n    min,\n    max,\n    children\n}) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control \" + (error ? \"is-invalid\" : \"\");\n    };\n\n    const toggleShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    return (\n        <div className=\"mb-1 mb-md-4 w-100\">\n            {label && (\n                <label htmlFor={name} className=\"form-label\">\n                    {label}\n                </label>\n            )}\n\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    className={getInputClasses()}\n                    onChange={handleChange}\n                    id={name}\n                    name={name}\n                    placeholder={placeholder}\n                    error={error}\n                    value={value}\n                    min={min}\n                    max={max}\n                />\n                {children}\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n            </div>\n        </div>\n    );\n};\n\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    placeholder: PropTypes.string,\n    children: PropTypes.object\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SelectField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    name,\n    error\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({\n            name: target.name,\n            value: target.value\n        });\n    };\n\n    const getInputClasses = () => {\n        return \"form-select \" + (error ? \"is-invalid\" : \"\");\n    };\n\n    return (\n        <div className=\"mb-1 mb-md-4\">\n            <label htmlFor=\"validationCustom04\" className=\"form-label\">\n                {label}\n            </label>\n            <select\n                className={getInputClasses()}\n                id=\"validationCustom04\"\n                name={name}\n                value={value}\n                onChange={handleChange}\n            >\n                <option disabled value=\"\">\n                    {defaultOption}\n                </option>\n                {options &&\n                    options.map((optionName) => {\n                        return (\n                            <option value={optionName._id} key={optionName._id}>\n                                {optionName.name}\n                            </option>\n                        );\n                    })}\n            </select>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nSelectField.propTypes = {\n    label: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    defaultOption: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    options: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\n};\n\nexport default SelectField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaField = ({ label, name, value, rows, onChange, error }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    return (\n        <div className=\"mb-1 mb-md-4\">\n            {label && (\n                <label\n                    htmlFor=\"exampleFormControlTextarea1\"\n                    className=\"form-label\"\n                >\n                    {label}\n                </label>\n            )}\n            <textarea\n                className={getInputClasses()}\n                name={name}\n                value={value}\n                id=\"exampleFormControlTextarea1\"\n                onChange={handleChange}\n                rows={rows}\n            />\n            {error && <div className=\"invalid-feedback \">{error}</div>}\n        </div>\n    );\n};\nTextAreaField.propTypes = {\n    label: PropTypes.string,\n    rows: PropTypes.string,\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    error: PropTypes.string\n};\n\nexport default React.memo(TextAreaField);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./button.css\";\n\nconst Button = ({\n    children,\n    type,\n    onClick,\n    disabled,\n    color,\n    size,\n    icon,\n    end,\n    start,\n    otherStyles\n}) => {\n    const switchIcons = () => {\n        const margin = start ? \" me-0\" : end ? \" ms-2\" : \"\";\n        switch (icon) {\n            case \"edit\":\n                return <i className={\"bi bi-pencil-square\" + margin}></i>;\n            case \"delete\":\n                return <i className={\"bi bi-trash\" + margin}></i>;\n            case \"cart\":\n                return <i className={\"bi bi-cart4\" + margin}></i>;\n            case \"back\":\n                return <i className={\"bi bi-caret-left\" + margin}></i>;\n            case \"add\":\n                return <i className={\"bi bi-plus-circle\" + margin}></i>;\n            default:\n                return null;\n        }\n    };\n    return (\n        <button\n            className={`btnCustom btnCustom-${color} btnCustom-${size} ${otherStyles}`}\n            onClick={onClick}\n            disabled={disabled}\n            type={type}\n        >\n            {start ? switchIcons() : null}\n\n            {children}\n            {end ? switchIcons() : null}\n        </button>\n    );\n};\nButton.defaultProps = {\n    type: \"button\",\n    color: \"primary\",\n    size: \"middle\"\n};\nButton.propTypes = {\n    children: PropTypes.string,\n    type: PropTypes.string,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool,\n    color: PropTypes.string,\n    size: PropTypes.string,\n    icon: PropTypes.string,\n    end: PropTypes.bool,\n    start: PropTypes.bool,\n    otherStyles: PropTypes.string\n};\nexport default Button;\n","import Button from \"./button\";\nexport default Button;\n","export const optionsBrand = [\n    { _id: \"ALPA\", name: \"ALPA\" },\n    { _id: \"TIKKURILA\", name: \"TIKKURILA\" },\n    { _id: \"CAPAROL\", name: \"CAPAROL\" },\n    { _id: \"ALPINA\", name: \"ALPINA\" },\n    { _id: \"BECKERS\", name: \"BECKERS\" },\n    { _id: \"BRITE\", name: \"BRITE\" },\n    { _id: \"ТЕКС\", name: \"ТЕКС\" },\n    { _id: \"SIKKENS\", name: \"SIKKENS\" },\n    { _id: \"DULUX\", name: \"DULUX\" },\n    { _id: \"MARSHALL\", name: \"MARSHALL\" },\n    { _id: \"PINOTEX\", name: \"PINOTEX\" },\n    { _id: \"HAMMERITE\", name: \"HAMMERITE\" },\n    { _id: \"FINNCOLOR\", name: \"FINNCOLOR\" },\n    { _id: \"ЯРОСЛАВСКИЕ КРАСКИ\", name: \"ЯРОСЛАВСКИЕ КРАСКИ \" },\n    { _id: \"БЫСТРОРЕМОНТ\", name: \"БЫСТРОРЕМОНТ\" },\n    { _id: \"ПЯТЬ МАСТЕРОВ\", name: \"ПЯТЬ МАСТЕРОВ\" },\n    { _id: \"NEOMID\", name: \"NEOMID\" },\n    { _id: \"FAKTURA\", name: \"FAKTURA \" },\n    { _id: \"VGT\", name: \"VGT\" },\n    { _id: \"LITOKOL\", name: \"LITOKOL\" },\n    { _id: \"MAGPAINT\", name: \"MAGPAINT\" },\n    { _id: \"KIM TEC\", name: \"KIM TEC\" },\n    { _id: \"QUELYD\", name: \"QUELYD\" },\n    { _id: \"TYTAN PROFESSIONAL\", name: \"TYTAN PROFESSIONAL\" },\n    { _id: \"VINCENT DECOR\", name: \"VINCENT DECOR\" },\n    { _id: \"MAPEI\", name: \"MAPEI\" },\n    { _id: \"COLOR EXPERT\", name: \"COLOR EXPERT\" },\n    { _id: \"MATRIX\", name: \"MATRIX\" },\n    { _id: \"СДЕЛАЙ ПОЛ\", name: \"СДЕЛАЙ ПОЛ\" },\n    { _id: \"АРТЕКС\", name: \"АРТЕКС\" },\n    { _id: \"OSCAR\", name: \"OSCAR\" },\n    { _id: \"CERESIT\", name: \"CERESIT\" }\n];\nexport const optionsProduct = [\n    { _id: \"лкм\", name: \"Лакокрасочные материалы\" },\n    { _id: \"cопутствующие материалы\", name: \"Сопутствующие материалы\" },\n    { _id: \"инструмент\", name: \"Инструмент\" },\n    { _id: \"колорант\", name: \"колорант\" }\n];\nexport const optionsProductCategory = [\n    { _id: \"эмаль\", name: \"эмаль\" },\n    { _id: \"краска\", name: \"краска\" },\n    { _id: \"грунтовка\", name: \"грунтовка\" },\n    { _id: \"очистка\", name: \"очистка\" },\n    { _id: \"лессир\", name: \"лессир\" },\n    { _id: \"декор\", name: \"декор\" },\n    { _id: \"шпатлевка\", name: \"шпатлевка\" },\n    { _id: \"затирка\", name: \"затирка\" },\n    { _id: \"колорант\", name: \"колорант\" },\n    { _id: \"клей\", name: \"клей\" },\n    { _id: \"валик\", name: \"валик\" },\n    { _id: \"кисть\", name: \"кисть\" },\n    { _id: \"антисептик\", name: \"антисептик\" },\n    { _id: \"антиплесень\", name: \"антиплесень\" },\n    { _id: \"герметик\", name: \"герметик\" },\n    { _id: \"гидроизоляция\", name: \"гидроизоляция\" },\n    { _id: \"губка\", name: \"губка\" },\n    { _id: \"клей для обоев\", name: \"клей для обоев\" },\n    { _id: \"клей-герметик\", name: \"клей-герметик\" },\n    { _id: \"колер\", name: \"колер\" },\n    { _id: \"тестер\", name: \"тестер\" },\n    { _id: \"ручка\", name: \"ручка\" },\n    { _id: \"стеклохолст\", name: \"стеклохолст\" },\n    { _id: \"скотч\", name: \"скотч\" },\n    { _id: \"шубка\", name: \"шубка\" },\n    { _id: \"каталог\", name: \"каталог\" },\n    { _id: \"другое\", name: \"другое\" }\n];\nexport const optionsScrubRating = [\n    { _id: \"\", name: \"нет\" },\n    { _id: \"1\", name: \"1 класс\" },\n    { _id: \"2\", name: \"2 класс\" },\n    { _id: \"3\", name: \"3 класс\" }\n];\nexport const optionsWos = [\n    { _id: \"water\", name: \"вода\" },\n    { _id: \"solvent\", name: \"уайт-спирит\" },\n    { _id: \"other\", name: \"другое\" }\n];\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else if (Array.isArray(data)) {\n                    statusValidate = data.length === 0;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n\n            case \"isCapital\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n\n            case \"isDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","import { useEffect, useState, useCallback } from \"react\";\nimport { validator } from \"../utils/validator\";\n\nconst useForm = (initialState = {}, onSubmit, validatorConfig) => {\n    const [form, setForm] = useState(initialState);\n    const [errors, setErrors] = useState({});\n\n    const validate = () => {\n        const errors = validator(form, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    useEffect(() => {\n        validate();\n    }, [form]);\n\n    const isValid =\n        Object.keys(errors).length === 0 && Object.keys(form).length > 0;\n\n    const handleChange = useCallback((target) => {\n        setForm((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    }, []);\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        onSubmit(form);\n    };\n\n    return { form, handleChange, handleSubmit, errors, isValid };\n};\nexport default useForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport TextAreaField from \"../common/form/textAreaField\";\nimport Button from \"../common/button\";\n\nimport {\n    optionsBrand,\n    optionsProduct,\n    optionsProductCategory,\n    optionsScrubRating,\n    optionsWos\n} from \"../../constants/formOptions\";\n\nimport useForm from \"../../hooks/useForm\";\n\nconst TemplateForm = ({ data, onSubmit }) => {\n    const validatorConfig = {};\n    const { form, handleChange, handleSubmit, errors, isValid } = useForm(\n        data,\n        onSubmit,\n        validatorConfig\n    );\n    const history = useHistory();\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <TextField\n                        type=\"text\"\n                        label=\"SortName*\"\n                        name=\"sortName\"\n                        onChange={handleChange}\n                        value={form.sortName || \"\"}\n                        error={errors.sortName}\n                    />\n                </div>\n\n                <div className=\"col-md-4\">\n                    <SelectField\n                        onChange={handleChange}\n                        options={optionsBrand}\n                        name=\"brand\"\n                        defaultOption=\"Choose...\"\n                        value={form.brand || \"\"}\n                        error={errors.brand}\n                        label=\"Брэнд*\"\n                    />\n                </div>\n                <div className=\"col-md-4\">\n                    <SelectField\n                        onChange={handleChange}\n                        options={optionsProduct}\n                        name=\"product\"\n                        defaultOption=\"Choose...\"\n                        value={form.product || \"\"}\n                        error={errors.product}\n                        label=\"Вид*\"\n                    />\n                </div>\n\n                <div className=\"col-md-4\">\n                    <SelectField\n                        onChange={handleChange}\n                        options={optionsProductCategory}\n                        name=\"productCategory\"\n                        defaultOption=\"Choose...\"\n                        value={form.productCategory || \"\"}\n                        error={errors.productCategory}\n                        label=\"Категория*\"\n                    />\n                </div>\n                <div className=\"col-md-12\">\n                    <TextField\n                        type=\"text\"\n                        label=\"Surface\"\n                        name=\"surface\"\n                        onChange={handleChange}\n                        value={form.surface || \"\"}\n                        error={errors.surface}\n                    />\n                </div>\n                <div className=\"col-md-3\">\n                    <SelectField\n                        onChange={handleChange}\n                        options={[\n                            { _id: \"внутри\", name: \"внутри\" },\n                            { _id: \"внутри, снаружи\", name: \"внутри, снаружи\" },\n                            { _id: \"снаружи\", name: \"снаружи\" }\n                        ]}\n                        name=\"FIoEU\"\n                        defaultOption=\"Choose...\"\n                        value={form.FIoEU || \"\"}\n                        error={errors.FIoEU}\n                        label=\"Применение*\"\n                    />\n                </div>\n                <div className=\"col-md-3\">\n                    <TextField\n                        type=\"number\"\n                        label=\"Степень блеска\"\n                        name=\"sheenLevel\"\n                        min={0}\n                        max={6}\n                        onChange={handleChange}\n                        value={form.sheenLevel || \"\"}\n                        error={errors.sheenLevel}\n                    />\n                </div>\n                <div className=\"col-md-3\">\n                    <SelectField\n                        onChange={handleChange}\n                        options={optionsScrubRating}\n                        name=\"scrubRating\"\n                        defaultOption=\"Choose...\"\n                        value={form.scrubRating || \"\"}\n                        error={errors.scrubRating}\n                        label=\"Класс истирания\"\n                    />\n                </div>\n                <div className=\"col-md-3\">\n                    <TextField\n                        type=\"number\"\n                        label=\"Расход*\"\n                        name=\"coverage\"\n                        min={0}\n                        max={100}\n                        onChange={handleChange}\n                        value={form.coverage || \"\"}\n                        error={errors.coverage}\n                    />\n                </div>\n                <div className=\"col-md-3\">\n                    <TextField\n                        type=\"number\"\n                        label=\"Срок службы\"\n                        name=\"life\"\n                        min={0}\n                        max={100}\n                        onChange={handleChange}\n                        value={form.life || \"\"}\n                        error={errors.life}\n                    />\n                </div>\n                <div className=\"col-md-3\">\n                    <TextField\n                        type=\"number\"\n                        label=\"Срок хранения\"\n                        name=\"shelfLife\"\n                        min={0}\n                        max={100}\n                        onChange={handleChange}\n                        value={form.shelfLife || \"\"}\n                        error={errors.shelfLife}\n                    />\n                </div>\n\n                <div className=\"col-md-3\">\n                    <SelectField\n                        onChange={handleChange}\n                        options={optionsWos}\n                        name=\"wos\"\n                        defaultOption=\"Choose...\"\n                        value={form.wos || \"\"}\n                        error={errors.wos}\n                        label=\"Разбавитель\"\n                    />\n                </div>\n                <div className=\"col-md-3\">\n                    <TextField\n                        type=\"number\"\n                        label=\"Содержание VOC (г/литр)\"\n                        name=\"vocLevels\"\n                        min={0}\n                        max={250}\n                        onChange={handleChange}\n                        value={form.vocLevels || \"\"}\n                        error={errors.vocLevels}\n                    />\n                </div>\n                <div className=\"col-md-3\">\n                    <SelectField\n                        onChange={handleChange}\n                        options={[\n                            { _id: \"1\", name: \"1\" },\n                            { _id: \"2\", name: \"2\" },\n                            { _id: \"3\", name: \"3\" }\n                        ]}\n                        name=\"amountCoat\"\n                        defaultOption=\"Choose...\"\n                        value={form.amountCoat || \"\"}\n                        error={errors.amountCoat}\n                        label=\"Количество слоев\"\n                    />\n                </div>\n                <div className=\"col-md-6\">\n                    <TextField\n                        type=\"text\"\n                        label=\"Страна производства\"\n                        name=\"countryOfOrigin\"\n                        onChange={handleChange}\n                        value={form.countryOfOrigin || \"\"}\n                        error={errors.countryOfOrigin}\n                    />\n                </div>\n                <div className=\"col-md-12\">\n                    <TextField\n                        type=\"text\"\n                        label=\"Ссылка на тех спецификацию\"\n                        name=\"linkTTX\"\n                        onChange={handleChange}\n                        value={form.linkTTX || \"\"}\n                        error={errors.linkTTX}\n                    />\n                </div>\n                <div className=\"col-md-12\">\n                    <TextField\n                        type=\"text\"\n                        label=\"Ссылка на IMG\"\n                        name=\"img\"\n                        onChange={handleChange}\n                        value={form.img || \"\"}\n                        error={errors.img}\n                    />\n                </div>\n                <div className=\"col-md-12\">\n                    <TextAreaField\n                        label=\"Краткое описание товара\"\n                        rows=\"3\"\n                        onChange={handleChange}\n                        name=\"description\"\n                        value={form.description || \"\"}\n                        error={errors.description}\n                    />\n                </div>\n                <div className=\"col-md-6\">\n                    <TextField\n                        type=\"text\"\n                        label=\"Ссылка на видео\"\n                        name=\"video\"\n                        onChange={handleChange}\n                        value={form.video || \"\"}\n                        error={errors.video}\n                    />\n                </div>\n                <div className=\"col-md-6\">\n                    <TextField\n                        type=\"text\"\n                        label=\"Ссылка на фото\"\n                        name=\"foto\"\n                        onChange={handleChange}\n                        value={form.foto || \"\"}\n                        error={errors.foto}\n                    />\n                </div>\n                <div className=\"col-md-12\">\n                    <TextAreaField\n                        label=\"Важно\"\n                        rows=\"3\"\n                        onChange={handleChange}\n                        name=\"important\"\n                        value={form.important || \"\"}\n                        error={errors.important}\n                    />\n                </div>\n                <div className=\"col-md-12\">\n                    <TextAreaField\n                        label=\"Преимущества\"\n                        rows=\"3\"\n                        onChange={handleChange}\n                        name=\"advantages\"\n                        value={form.advantages || \"\"}\n                        error={errors.advantages}\n                    />\n                </div>\n            </div>\n            <div className=\"row d-flex justify-content-center\">\n                <div\n                    className=\"col-md-6 text-center\"\n                    onClick={() => history.goBack()}\n                >\n                    <Button color=\"secondary\" icon=\"back\" start>\n                        Назад\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        color=\"success\"\n                        disabled={!isValid}\n                        otherStyles=\"ms-3\"\n                    >\n                        Обновить\n                    </Button>\n                </div>\n            </div>\n        </form>\n    );\n};\nTemplateForm.propTypes = {\n    data: PropTypes.object,\n    onSubmit: PropTypes.func\n};\nexport default TemplateForm;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createTemplate } from \"../../../store/templates\";\n\nimport TemplateForm from \"../../ui/templateForm\";\n\nconst CreateTemplatePage = () => {\n    const dispatch = useDispatch();\n\n    const handleSubmit = (form) => {\n        dispatch(createTemplate(form));\n\n        // .then((form) => {\n        //   if (form) history.push(`/admin/templates`);\n        // });\n    };\n    //\n    return (\n        <div className=\"container\">\n            <div className=\"card shadow px-5 my-2\">\n                <div className=\"row my-2\">\n                    <div className=\"col-12\">\n                        <h1 className=\"text-center\">Create Template</h1>\n                        <p className=\"card-text\">\n                            <small className=\"text-muted\">\n                                Поля отмеченные * обязятельны для заполнения.\n                                Для создания шаблона должно быть заполнено\n                                минимум 6 полей.\n                            </small>\n                        </p>\n                    </div>\n                </div>\n                <TemplateForm onSubmit={handleSubmit} />\n            </div>\n        </div>\n    );\n};\n\nexport default CreateTemplatePage;\n","import CreateTemplatePage from \"./createTemplatePage\";\nexport default CreateTemplatePage;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport { getTemplateById, updateTemplate } from \"../../../store/templates\";\n\nimport TemplateForm from \"../../ui/templateForm\";\n\nconst EditTemplatePage = () => {\n    const dispatch = useDispatch();\n    const { id } = useParams();\n\n    const template = useSelector(getTemplateById(id));\n\n    const handleSubmit = (form) => {\n        dispatch(updateTemplate(form));\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"card shadow px-5 my-2\">\n                <div className=\"row my-2\">\n                    <div className=\"col-12\">\n                        <h1 className=\"text-center\">Edit Template</h1>\n                    </div>\n                </div>\n                <>\n                    <TemplateForm data={template} onSubmit={handleSubmit} />\n                    <pre>{JSON.stringify(template, 0, 2)}</pre>\n                </>\n            </div>\n        </div>\n    );\n};\n\nexport default EditTemplatePage;\n","import EditTemplatePage from \"./editTemplatePage\";\nexport default EditTemplatePage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n\n    const handleIcons = (item) => {\n        const caretUp = <i className=\"bi bi-caret-up-fill\"></i>;\n        const caretDown = <i className=\"bi bi-caret-down-fill\"></i>;\n        if (selectedSort.path === item) {\n            if (selectedSort.order === \"asc\") {\n                return caretUp;\n            }\n            return caretDown;\n        }\n    };\n\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}\n                        {handleIcons(columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\n\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item.templateId}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\nexport default TableBody;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\nexport default Table;\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table table-hover\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\nTable.propTypes = {\n    data: PropTypes.array,\n    columns: PropTypes.object,\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    children: PropTypes.array\n};\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Table, { TableBody, TableHeader } from \"../common/table\";\nimport Button from \"../common/button\";\n\nconst PaintsTable = ({ users, onSort, selectedSort, onEdit, onDelete }) => {\n    const columns = {\n        name: {\n            path: \"sortName\",\n            name: \"Имя\"\n        },\n        brand: {\n            path: \"brand\",\n            name: \"Брэнд\"\n        },\n        FIoEU: {\n            path: \"FIoEU\",\n            name: \"Применение\"\n        },\n        productCategory: {\n            path: \"productCategory\",\n            name: \"Категория\"\n        },\n        edit: {\n            component: (paint) => (\n                <Button\n                    color=\"success\"\n                    icon=\"edit\"\n                    end\n                    onClick={() => onEdit(paint._id)}\n                >\n                    Edit\n                </Button>\n            )\n        },\n        delete: {\n            component: (paint) => (\n                <Button\n                    color=\"danger\"\n                    icon=\"delete\"\n                    end\n                    onClick={() => onDelete(paint._id)} // при MONGO заменить на _id\n                >\n                    Delete\n                </Button>\n            )\n        }\n    };\n    return (\n        <Table {...{ onSort, selectedSort, columns, data: users }}>\n            <TableHeader {...{ onSort, selectedSort, columns }} />\n            <TableBody {...{ columns, data: users }} />\n        </Table>\n    );\n};\nPaintsTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    currentSort: PropTypes.object,\n    selectedSort: PropTypes.object.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDelete: PropTypes.func\n};\n\nexport default PaintsTable;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ pages, onPageChange, currentPage }) => {\n    if (pages.length === 1) {\n        return null;\n    }\n\n    return (\n        <nav aria-label=\"Page navigation example\">\n            <ul className=\"pagination \">\n                {pages.map((page) => (\n                    <li\n                        className={\n                            \"page-item \" +\n                            (page === currentPage ? \"active\" : \"\")\n                        }\n                        key={page}\n                    >\n                        <button\n                            className=\"page-link\"\n                            onClick={() => onPageChange(page)}\n                        >\n                            {page}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    pages: PropTypes.array.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\n\nimport { paginate } from \"../utils/paginate\";\n\nexport const usePagination = ({ contentPerPage, count, initial }) => {\n    const [currentPage, setCurrentPage] = useState(1);\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [initial]);\n\n    const dataCrop = paginate(count, currentPage, contentPerPage);\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const pageCount = Math.ceil(count.length / contentPerPage);\n\n    const pages = _.range(1, pageCount + 1);\n\n    return { dataCrop, currentPage, pages, handlePageChange, pageCount };\n};\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return _(items).slice(startIndex).take(pageSize).value();\n}\n","import React from \"react\";\n\nconst Loader = () => (\n    <div className=\"d-flex justify-content-center m-5\">\n        <button className=\"btn btn-primary\" type=\"button\" disabled>\n            <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n            ></span>\n            Loading...\n        </button>\n    </div>\n);\n\nexport default Loader;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport PaintsTable from \"../../ui/paintsTable\";\nimport Pagination from \"../../common/pagination\";\nimport Button from \"../../common/button\";\nimport { usePagination } from \"../../../hooks/usePagination\";\n\nimport {\n    getTemplates,\n    getTemplatesLoadingStatus,\n    loadTemplatesList,\n    removeTemplate\n} from \"../../../store/templates\";\nimport Loader from \"../../common/loader\";\n\nconst TemplateListPage = () => {\n    const dispatch = useDispatch();\n\n    const history = useHistory();\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const pageSize = 40;\n\n    useEffect(() => {\n        console.log(\"loadTemplatesList!!!\");\n        dispatch(loadTemplatesList());\n    }, []);\n    const isLoadingTemplates = useSelector(getTemplatesLoadingStatus());\n\n    const templates = useSelector(getTemplates());\n\n    const filteredUsers =\n        templates &&\n        templates.filter(\n            (paint) =>\n                paint.sortName\n                    .toLowerCase()\n                    .indexOf(searchQuery.toLowerCase()) !== -1\n        );\n\n    const sortedPaints = _.orderBy(\n        filteredUsers,\n        [sortBy.path],\n        [sortBy.order]\n    );\n\n    const { dataCrop, currentPage, pages, handlePageChange } = usePagination({\n        contentPerPage: pageSize,\n        count: sortedPaints,\n        initial: searchQuery\n    });\n\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    const handleEdit = (id) => {\n        history.push(`/admin/templates/${id}`);\n    };\n    const handleDelete = (id) => {\n        if (window.confirm(\"Вы действительно хотите удалить шаблон?\")) {\n            dispatch(removeTemplate(id));\n        }\n    };\n\n    const handleSearchQuery = ({ target }) => {\n        setSearchQuery(target.value);\n    };\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row mt-2\">\n                <div className=\"col-12\">\n                    <h1 className=\"text-center mt-5\">Список шаблонов</h1>;\n                </div>\n            </div>\n\n            <div className=\"row mt-2 justify-content-center\">\n                <div className=\"col-md-8\">\n                    <div className=\"d-flex flex-column flex-lg-row justify-content-center\">\n                        <div>\n                            <input\n                                type=\"text\"\n                                name=\"searchQuery\"\n                                className=\"form-control\"\n                                placeholder=\"Search...\"\n                                onChange={handleSearchQuery}\n                                value={searchQuery}\n                            />\n                        </div>\n                        <Link to=\"templates/create\">\n                            <Button\n                                color=\"success\"\n                                otherStyles=\"ms-lg-5 mt-lg-0 mt-2\"\n                                icon=\"add\"\n                                end\n                            >\n                                Добавить\n                            </Button>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n            {!isLoadingTemplates ? (\n                <>\n                    <PaintsTable\n                        users={dataCrop}\n                        onSort={handleSort}\n                        selectedSort={sortBy}\n                        onEdit={handleEdit}\n                        onDelete={handleDelete}\n                    />\n                    <Pagination\n                        pages={pages}\n                        onPageChange={handlePageChange}\n                        currentPage={currentPage}\n                    />\n                </>\n            ) : (\n                <Loader />\n            )}\n        </div>\n    );\n};\n\nexport default TemplateListPage;\n","import TemplateListPage from \"./templateListPage\";\nexport default TemplateListPage;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ItemRate = ({ rate, mode }) => {\r\n    const starCount =\r\n        rate === 0 ? [...Array(Math.round(5))] : [...Array(Math.round(rate))];\r\n    const color = rate > 0 ? \"text-warning\" : \"text-secondary\";\r\n    return (\r\n        <div className=\"d-flex flex-nowrap\">\r\n            {mode === \"single\" ? (\r\n                <>\r\n                    <i className={`bi bi-star-fill ${color}`}></i>\r\n                    <div className=\"ms-1\">{rate}</div>\r\n                </>\r\n            ) : (\r\n                starCount.map((_, index) => (\r\n                    <i className={`bi bi-star-fill ${color}`} key={index}></i>\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nItemRate.propTypes = {\r\n    rate: PropTypes.number.isRequired,\r\n    mode: PropTypes.string\r\n};\r\n\r\nexport default ItemRate;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./productCard.css\";\r\n\r\nimport imagePlaceholder from \"../../../assets/images/img-placehold.jpg\";\r\nimport ItemRate from \"../../common/itemRate\";\r\n\r\nconst ProductCard = ({ item, rate }) => {\r\n    const history = useHistory();\r\n\r\n    const handelClick = (item) => history.push(`/products/${item.templateId}`);\r\n\r\n    return (\r\n        <div className=\"col-xl-3  col-md-4 col-sm-6 d-flex align-items-stretch\">\r\n            <div\r\n                className=\"product-card card mb-3 shadow\"\r\n                onClick={() => handelClick(item)}\r\n            >\r\n                <div className=\"product-wrap\">\r\n                    <img\r\n                        src={item.img || imagePlaceholder}\r\n                        className=\"p-4\"\r\n                        alt=\"product-card\"\r\n                    />\r\n                    <div className=\"product-caption\">\r\n                        <div className=\"product-description\">\r\n                            <div className=\"product-description-wrap\">\r\n                                <div className=\"product-title d-flex flex-column justify-content-around\">\r\n                                    <ul>\r\n                                        <li>\r\n                                            Надолго защищает пол от износа и\r\n                                            механических повреждений\r\n                                        </li>\r\n                                        <li>\r\n                                            Эффектно подчеркивает натуральную\r\n                                            красоту дерева\r\n                                        </li>\r\n                                        <li>Быстро сохнет</li>\r\n                                    </ul>\r\n                                    <a\r\n                                        role=\"button\"\r\n                                        className=\"btn btn-danger w-100\"\r\n                                    >\r\n                                        КУПИТЬ\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-body d-flex flex-column\">\r\n                    <h6 className=\"card-title text-center\">{item.sortName}</h6>\r\n\r\n                    <div className=\"mt-auto \">\r\n                        <div className=\"d-flex align-items-baseline justify-content-between\">\r\n                            <div className=\"fw-bold fs-5 m-0\">{`от ${item.lowestPrice} ₽`}</div>\r\n                            <ItemRate rate={rate} mode=\"single\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nProductCard.propTypes = {\r\n    item: PropTypes.object,\r\n    rate: PropTypes.number\r\n};\r\nexport default ProductCard;\r\n","import React from \"react\";\nimport PropTypes, { oneOfType } from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({ name: name, value: !value });\n    };\n\n    return (\n        <div className=\"form-check\">\n            <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                value={value}\n                id={name}\n                onChange={handleChange}\n                checked={value}\n            />\n            <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\n                {children}\n            </label>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    error: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\n\nexport default CheckBoxField;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { addFilter, getFilterByParent } from \"../../store/filters\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst FilterSubmenu = ({ submenu, show, parent }) => {\n    const dispatch = useDispatch();\n    const initialData = useSelector(getFilterByParent(parent));\n    const [data, setData] = useState({});\n\n    const items = [];\n\n    for (let i = 0; i < submenu.length; i += 1) {\n        items.push(submenu.slice(i, i + 1));\n    }\n\n    useEffect(() => {\n        if (data) {\n            dispatch(addFilter({ data, parent }));\n        }\n    }, [data]);\n\n    useEffect(() => {\n        if (initialData) {\n            setData(initialData);\n        } else {\n            setData({});\n        }\n    }, [initialData]);\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n\n    return (\n        <ul\n            className={\"categories-menu dropdown-menu \" + (show ? \" show\" : \"\")}\n        >\n            <li>\n                <div className=\"row\">\n                    {items.map((val, i) => (\n                        <div\n                            key={i}\n                            className=\"col-menu col-lg-3 col-md-4 col-sm-6\"\n                        >\n                            <div className=\"content\">\n                                <ul className=\"menu-col\">\n                                    {val.map((_, index) => {\n                                        const checkNameValue = val[index].value;\n                                        const checkNameTitle = val[index].title;\n                                        return (\n                                            <li key={index}>\n                                                <CheckBoxField\n                                                    name={checkNameValue}\n                                                    onChange={handleChange}\n                                                    value={\n                                                        data[checkNameValue] ||\n                                                        false\n                                                    }\n                                                >\n                                                    {checkNameTitle}\n                                                </CheckBoxField>\n                                            </li>\n                                        );\n                                    })}\n                                </ul>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </li>\n        </ul>\n    );\n};\nFilterSubmenu.propTypes = {\n    submenu: PropTypes.array,\n    show: PropTypes.bool,\n    parent: PropTypes.string\n};\nexport default FilterSubmenu;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst RadioField = ({ options, name, onChange, value, label }) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-around\">\r\n            {label && <label className=\"form-label\">{label}</label>}\r\n            <div>\r\n                {options.map((option) => (\r\n                    <div\r\n                        className=\"form-check form-check-inline\"\r\n                        key={option.name + \"_\" + option.value}\r\n                    >\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            type=\"radio\"\r\n                            name={name}\r\n                            id={option.name + \"_\" + option.value}\r\n                            value={option.value}\r\n                            checked={option.value === value}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor={option.name + \"_\" + option.value}\r\n                        >\r\n                            {option.name}\r\n                        </label>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nRadioField.propTypes = {\r\n    label: PropTypes.string,\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    options: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\r\n};\r\n\r\nexport default RadioField;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport RadioField from \"../common/form/radioField\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { switchSortBy } from \"../../store/filters\";\r\n\r\nconst SortSubmenu = ({ submenu, show }) => {\r\n    const dispatch = useDispatch();\r\n    const [data, setData] = useState({ sort: \"asc\" });\r\n\r\n    useEffect(() => {\r\n        dispatch(switchSortBy(data));\r\n    }, [data]);\r\n\r\n    const newArray = submenu.map((item) => ({ ...item, name: item.title }));\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n    };\r\n\r\n    return (\r\n        <ul\r\n            className={\"categories-menu dropdown-menu \" + (show ? \" show\" : \"\")}\r\n        >\r\n            <li>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mx-auto\">\r\n                        <RadioField\r\n                            options={newArray}\r\n                            value={data.sort || \"\"}\r\n                            onChange={handleChange}\r\n                            name=\"sort\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\nSortSubmenu.propTypes = {\r\n    submenu: PropTypes.array,\r\n    show: PropTypes.bool\r\n};\r\nexport default SortSubmenu;\r\n","import React, { useRef, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport FilterSubmenu from \"./filterSubmenu\";\nimport SortSubmenu from \"./sortSubmenu\";\n\nconst FilterItem = ({ item }) => {\n    const [show, setShow] = useState(false);\n\n    const toggleDropdown = () => {\n        setShow((prevState) => !prevState);\n    };\n    const categoriesRef = useRef();\n\n    const handleOutsideClick = (e) => {\n        if (!e.path.includes(categoriesRef.current)) {\n            setShow(false);\n        }\n    };\n\n    useEffect(() => {\n        document.body.addEventListener(\"click\", handleOutsideClick);\n        return () =>\n            document.body.removeEventListener(\"click\", handleOutsideClick);\n    }, []);\n\n    return (\n        <li className=\"nav-item dropdown me-5 text-center\" ref={categoriesRef}>\n            <a\n                type=\"button\"\n                className=\"nav-link dropdown-toggle\"\n                data-bs-toggle=\"dropdown\"\n                onClick={toggleDropdown}\n            >\n                {item.title}\n            </a>\n            {item.submenu && item.value === \"sort\" ? (\n                <SortSubmenu\n                    submenu={item.submenu}\n                    parent={item.value}\n                    show={show}\n                />\n            ) : (\n                <FilterSubmenu\n                    submenu={item.submenu}\n                    parent={item.value}\n                    show={show}\n                />\n            )}\n        </li>\n    );\n};\nFilterItem.propTypes = {\n    item: PropTypes.object\n};\nexport default FilterItem;\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getBrandList } from \"../../store/products\";\r\n\r\nimport data from \"../../data/productsFilterData.json\";\r\n\r\nimport FilterItem from \"./filterItem\";\r\n\r\nconst ProductsFilter = () => {\r\n    const brands = useSelector(getBrandList());\r\n    const itemsWithActuallyBrands = data.map((item) =>\r\n        item.value === \"brand\"\r\n            ? {\r\n                  ...item,\r\n                  submenu: item.submenu.filter((x) => brands.includes(x.value))\r\n              }\r\n            : item\r\n    );\r\n\r\n    return (\r\n        <section>\r\n            <ul className=\"categories d-flex  flex-column flex-md-row justify-content-md-center nav mb-md-4 mb-2\">\r\n                {itemsWithActuallyBrands.map((item) => (\r\n                    <FilterItem item={item} key={item.id} />\r\n                ))}\r\n            </ul>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default ProductsFilter;\r\n","export const templateProperties = [\n    [\"FIoEU\", \"Применение\"],\n    [\"amountCoat\", \"Количество слоев\"],\n    [\"brand\", \"Брэнд\"],\n    [\"coverage\", \"Расход\"],\n    [\"product\", \"Вид\"],\n    [\"productCategory\", \"Категория\"],\n    [\"recoatTime\", \"Время высыхания, ч\"],\n    [\"sheenLevel\", \"Степень блеска\"],\n    [\"shelfLife\", \"Срок хранения, мес\"],\n    [\"vocLevels\", \"ЛОС, грамм/литр\"],\n    [\"wos\", \"Разбавитель\"]\n];\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ActiveFiltersSubitem = ({ item, findName, handleRemove }) => {\n    const [title, list] = item;\n\n    if (list.length === 0) return null;\n    return (\n        <div\n            key={title}\n            className=\"d-flex flex-wrap flex-row align-items-baseline mb-3\"\n        >\n            <p className=\"me-2\">{findName(title)}</p>\n            {list.map((name) => (\n                <button\n                    type=\"button\"\n                    className=\"btn btn-outline-secondary btn-sm me-2\"\n                    onClick={() => handleRemove(title, name)}\n                    key={name}\n                >\n                    {name} <i className=\"bi bi-x-lg ms-1\"></i>\n                </button>\n            ))}\n        </div>\n    );\n};\nActiveFiltersSubitem.propTypes = {\n    item: PropTypes.array,\n    findName: PropTypes.func,\n    handleRemove: PropTypes.func\n};\nexport default ActiveFiltersSubitem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ActiveFiltersSubitem from \"./activeFiltersSubitem\";\n\nconst ActiveFiltersItem = ({ filters, ...rest }) => {\n    return (\n        <div className=\"d-flex flex-wrap flex-row\">\n            {filters.map((item) => {\n                return (\n                    <ActiveFiltersSubitem item={item} {...rest} key={item} />\n                );\n            })}\n        </div>\n    );\n};\nActiveFiltersItem.propTypes = {\n    filters: PropTypes.array\n};\nexport default ActiveFiltersItem;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    getActiveFilters,\n    getFilterStatus,\n    removeAllFilters,\n    removeFilter\n} from \"../../store/filters\";\n\nimport { templateProperties } from \"../../constants/templateProperties\";\nimport ActiveFiltersItem from \"./activeFiltersItem\";\n\nconst ActiveFilters = () => {\n    const dispatch = useDispatch();\n    const isEmptyFilter = useSelector(getFilterStatus());\n    const filters = useSelector(getActiveFilters());\n\n    // смена названия\n    function findName(name) {\n        return templateProperties.find(\n            (item) => item[0] === name && item[1]\n        )[1];\n    }\n\n    const handleRemove = (title, value) => {\n        dispatch(removeFilter({ title, value }));\n    };\n    const clearFilter = () => {\n        dispatch(removeAllFilters());\n    };\n    if (isEmptyFilter) return null;\n    return (\n        <div className=\"mb-3\">\n            <div className=\"d-flex flex-row mb-md-4 mb-2\">\n                <h5>Выбранные фильтры</h5>\n                <button\n                    type=\"button\"\n                    className=\"btn btn-outline-danger btn-sm ms-3 \"\n                    onClick={clearFilter}\n                >\n                    Сбросить фильтры <i className=\"bi bi-x-lg ms-1\"></i>\n                </button>\n            </div>\n            <ActiveFiltersItem {...{ filters, findName, handleRemove }} />\n        </div>\n    );\n};\n\nexport default ActiveFilters;\n","import ProductListPage from \"./productListPage\";\nexport default ProductListPage;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport ProductCard from \"../../ui/productCard/productCard\";\r\nimport ProductsFilter from \"../../ui/productsFilter\";\r\nimport ActiveFilters from \"../../ui/activeFilters\";\r\nimport Pagination from \"../../common/pagination\";\r\nimport { usePagination } from \"../../../hooks/usePagination\";\r\nimport { getAverageRate } from \"../../../store/reviews\";\r\n\r\nconst ProductListPage = ({ items }) => {\r\n    const reviewsObj = useSelector(getAverageRate());\r\n    const pageSize = 20;\r\n\r\n    const { dataCrop, currentPage, pages, handlePageChange } = usePagination({\r\n        contentPerPage: pageSize,\r\n        count: items\r\n    });\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <ProductsFilter />\r\n            <ActiveFilters />\r\n\r\n            <div className=\"row\">\r\n                {dataCrop.map((item) => {\r\n                    const rate = reviewsObj[item.templateId]\r\n                        ? reviewsObj[item.templateId].averageRate\r\n                        : 0;\r\n\r\n                    return (\r\n                        <ProductCard\r\n                            key={item.templateId}\r\n                            item={item}\r\n                            rate={rate}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                    pages={pages}\r\n                    onPageChange={handlePageChange}\r\n                    currentPage={currentPage}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nProductListPage.propTypes = {\r\n    items: PropTypes.array\r\n};\r\nexport default ProductListPage;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RadioBtnField = ({ options, name, onChange, value, label }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    return (\n        <div className=\"d-flex align-items-center  border-bottom my-1\">\n            <label className=\"form-label min-width-70 \">{label}</label>\n            <div className=\"d-flex flex-wrap\">\n                {options.map((option) => (\n                    <div\n                        key={option.value}\n                        className=\"form-check my-2 mx-2 px-0\"\n                    >\n                        <input\n                            className=\"btn-check\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === value}\n                            value={option.value}\n                            onChange={handleChange}\n                            disabled={option.count < 1}\n                        />\n                        <label\n                            className=\"btn btn-outline-secondary min-width-70\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nRadioBtnField.propTypes = {\n    options: PropTypes.array,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    label: PropTypes.string\n};\n\nexport default RadioBtnField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport RadioBtnField from \"../../common/form/radioBtnField\";\n\nconst RadioForm = ({ array, onChange, data }) => {\n    if (array) {\n        const arrObj = {};\n        for (let i = 0; i < array.length; i++) {\n            arrObj[array[i].base]\n                ? arrObj[array[i].base].push(array[i])\n                : (arrObj[array[i].base] = [array[i]]);\n        }\n\n        return Object.keys(arrObj).map((item, i) => {\n            const canSizes = arrObj[item]\n                .map((item) => ({\n                    name:\n                        `${item.size} ${item.volume} ` +\n                        (item.color ? `${item.color}` : \"\"),\n                    value: item.paintId,\n                    count: item.count,\n                    sortKey: item.size\n                }))\n                .sort((a, b) => a.sortKey - b.sortKey);\n\n            return (\n                <RadioBtnField\n                    key={canSizes[0].value}\n                    options={canSizes}\n                    value={data.id}\n                    name=\"id\"\n                    onChange={onChange}\n                    label={item === null ? \"база\" : item}\n                />\n            );\n        });\n    }\n    return null;\n};\nRadioForm.propTypes = {\n    array: PropTypes.array,\n    onChange: PropTypes.func,\n    data: PropTypes.object\n};\nexport default RadioForm;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quantity from \"../common/quantity\";\nimport Tooltip from \"../common/tooltip/tooltip\";\n\nconst QuantityProductPage = ({ quantity, setQuantity, maxQuantity }) => {\n    const quantityMin = 1;\n    const quantityMax = maxQuantity;\n    const [showTip, setShowTip] = useState(false);\n\n    const incrementQuantity = () => {\n        if (quantity < quantityMax) {\n            setQuantity((prevState) => prevState + 1);\n        }\n    };\n    const decrementQuantity = () => {\n        if (quantity > quantityMin) {\n            setQuantity((prevState) => prevState - 1);\n        }\n    };\n    const handleChange = (target) => {\n        setQuantity(target.value);\n    };\n    return (\n        <Tooltip\n            content=\"Добавлено максимальное количество\"\n            direction=\"top\"\n            showTip={showTip}\n        >\n            <Quantity\n                onChange={handleChange}\n                onDecrement={decrementQuantity}\n                onIncrement={incrementQuantity}\n                value={quantity}\n                min={quantityMin}\n                max={quantityMax}\n                setShowTip={setShowTip}\n            />\n        </Tooltip>\n    );\n};\nQuantityProductPage.propTypes = {\n    quantity: PropTypes.number,\n    maxQuantity: PropTypes.number,\n    setQuantity: PropTypes.func\n};\nexport default QuantityProductPage;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport imgPlaceHold from \"../../assets/images/img-placehold.jpg\";\r\nimport RadioForm from \"../ui/radioForm/radioForm\";\r\nimport ItemRate from \"../common/itemRate\";\r\nimport { getNoun } from \"../../utils/getNoun\";\r\nimport QuantityProductPage from \"./quantityProductPage\";\r\n\r\nconst ProductHeader = ({\r\n    product,\r\n    itemPrice,\r\n    onChange,\r\n    data,\r\n    quantity,\r\n    setQuantity,\r\n    maxQuantity,\r\n    onAddPaintCart,\r\n    redirectToCart,\r\n    isAddCart,\r\n    countReviewsByProduct,\r\n    averageRateByProduct\r\n}) => {\r\n    const str = getNoun(countReviewsByProduct, \"отзыв\", \"отзыва\", \"отзывов\");\r\n    return (\r\n        <div className=\"row my-3\">\r\n            <div className=\"col-md-6\">\r\n                <img\r\n                    className=\"w-100 p-2 p-lg-4\"\r\n                    src={product.img ? product.img : imgPlaceHold}\r\n                    alt=\"product\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"col-md-6\">\r\n                <div className=\"row mb-2\">\r\n                    <div className=\"col-12 mb-2\">\r\n                        <h2 className=\"\">{product.sortName}</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"d-flex flex-row\">\r\n                            <ItemRate rate={averageRateByProduct} />\r\n                            {countReviewsByProduct > 0 ? (\r\n                                <span className=\"ms-2\">\r\n                                    {`${countReviewsByProduct} ${str}`}\r\n                                </span>\r\n                            ) : (\r\n                                <span className=\"ms-2\">отзывов нет</span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    {product.countryOfOrigin && (\r\n                        <div className=\"col-lg-6 text-lg-end\">\r\n                            <p>\r\n                                <small>место производства: </small>&nbsp;\r\n                                {product.countryOfOrigin}\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <RadioForm\r\n                            array={product.paints}\r\n                            onChange={onChange}\r\n                            data={data}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mb-3\">\r\n                    <div className=\"col-12 mb-3\">\r\n                        <div className=\"d-flex flex-column flex-lg-row align-items-center\">\r\n                            <div className=\"me-lg-2 mb-lg-0 mb-2\">\r\n                                Количество\r\n                            </div>\r\n                            <QuantityProductPage\r\n                                quantity={quantity}\r\n                                setQuantity={setQuantity}\r\n                                maxQuantity={maxQuantity}\r\n                            />\r\n                            <div className=\"display-5 ms-lg-auto\">\r\n                                <strong className=\"text-nowrap\">\r\n                                    {itemPrice && itemPrice * quantity} ₽\r\n                                </strong>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6 mx-auto mb-2 mb-lg-0\">\r\n                        {!isAddCart ? (\r\n                            <button\r\n                                className=\"btn btn-primary btn-lg rounded-0  w-100\"\r\n                                onClick={onAddPaintCart}\r\n                                disabled={maxQuantity < 1}\r\n                            >\r\n                                КУПИТЬ\r\n                            </button>\r\n                        ) : (\r\n                            <button\r\n                                className=\"btn btn-danger btn-lg rounded-0  w-100\"\r\n                                onClick={redirectToCart}\r\n                            >\r\n                                ОФОРМИТЬ\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                    {product.linkTTX && (\r\n                        <div className=\"col-lg-6 mx-auto\">\r\n                            <a\r\n                                className=\"btn btn-outline-primary btn-lg rounded-0 w-100\"\r\n                                href={product.linkTTX}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                тех спецификация\r\n                            </a>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div>\r\n                    {product.description ? (\r\n                        product.description\r\n                    ) : (\r\n                        <p>\r\n                            Lorem ipsum, dolor sit amet consectetur adipisicing\r\n                            eli ione quam iusto nostrum natus itaque, veritatis\r\n                            molestiae cumque illum voluptate quasi optio est ab!\r\n                            Consequuntur illum, a obcaecati fugit ad tempore,\r\n                            eaque nisi est voluptatum cumque mollitia?\r\n                        </p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nProductHeader.propTypes = {\r\n    product: PropTypes.object,\r\n    itemPrice: PropTypes.number,\r\n    onChange: PropTypes.func,\r\n    data: PropTypes.object,\r\n    quantity: PropTypes.number,\r\n    maxQuantity: PropTypes.number,\r\n    setQuantity: PropTypes.func,\r\n    onAddPaintCart: PropTypes.func,\r\n    redirectToCart: PropTypes.func,\r\n    isAddCart: PropTypes.bool,\r\n    countReviewsByProduct: PropTypes.number,\r\n    averageRateByProduct: PropTypes.number\r\n};\r\nexport default ProductHeader;\r\n","export const getNoun = (number, one, two, five) => {\r\n    let n = Math.abs(number);\r\n    n %= 100;\r\n    if (n >= 5 && n <= 20) {\r\n        return five;\r\n    }\r\n    n %= 10;\r\n    if (n === 1) {\r\n        return one;\r\n    }\r\n    if (n >= 2 && n <= 4) {\r\n        return two;\r\n    }\r\n    return five;\r\n};\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProductAdvantages = ({ product }) => {\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                {product.advantages && product.advantages !== \" \" ? (\n                    <ul>\n                        {product.advantages.split(\"//\").map((item, index) => {\n                            return <li key={index + 1}>{item}</li>;\n                        })}\n                    </ul>\n                ) : null}\n            </div>\n        </div>\n    );\n};\nProductAdvantages.propTypes = {\n    product: PropTypes.object\n};\nexport default ProductAdvantages;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { templateProperties } from \"../../constants/templateProperties\";\n\nconst ProductDetails = ({ product }) => {\n    const values = [];\n    Object.keys(product).forEach((key) =>\n        templateProperties.map((item) => {\n            if (key === item[0]) {\n                return values.push([item[1], product[key]]);\n            }\n            return null;\n        })\n    );\n\n    return (\n        <div className=\"row \">\n            <div className=\"col-md-9 mx-auto\">\n                <table className=\"table\">\n                    <tbody>\n                        {values.map((item) => (\n                            <tr key={item}>\n                                <th scope=\"row\">{item[0]}</th>\n                                <td className=\"text-end\">{item[1]}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\nProductDetails.propTypes = {\n    product: PropTypes.object\n};\nexport default ProductDetails;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProductImportant = ({ product }) => {\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                <h4 className=\"text-center\">Важно!!!</h4>\n                {product.important !== \" \" ? (\n                    <ul>\n                        {product.important.split(\"//\").map((item, index) => {\n                            return <li key={index + 1}>{item}</li>;\n                        })}\n                    </ul>\n                ) : null}\n            </div>\n        </div>\n    );\n};\nProductImportant.propTypes = {\n    product: PropTypes.object\n};\nexport default ProductImportant;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./starRating.css\";\r\n\r\nconst StarRating = ({ rate, onRating }) => {\r\n    return (\r\n        <div className=\"star-rating d-flex flex-nowrap\">\r\n            {[...Array(5)].map((star, index) => {\r\n                const rateValue = index + 1;\r\n                const color =\r\n                    rateValue <= rate ? \"text-warning\" : \"text-secondary\";\r\n                return (\r\n                    <label key={index}>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"ratio\"\r\n                            value={rateValue}\r\n                            onClick={() => onRating(rateValue)}\r\n                        />\r\n                        <i className={`bi bi-star-fill ${color}`}></i>\r\n                    </label>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\nStarRating.propTypes = {\r\n    rate: PropTypes.number.isRequired,\r\n    onRating: PropTypes.func\r\n};\r\nexport default React.memo(StarRating);\r\n","import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport TextAreaField from \"../form/textAreaField\";\r\n\r\nimport { createReview } from \"../../../store/reviews\";\r\nimport useForm from \"../../../hooks/useForm\";\r\nimport StarRating from \"../starRating/starRating\";\r\nimport { getCurrentUserData } from \"../../../store/users\";\r\n\r\nconst AddReview = ({ templateId, onClose }) => {\r\n    const user = useSelector(getCurrentUserData());\r\n    const dispatch = useDispatch();\r\n    const [rate, setRate] = useState(null);\r\n\r\n    const handleRating = useCallback((rateValue) => {\r\n        setRate(rateValue);\r\n    }, []);\r\n\r\n    const closeForm = () => {\r\n        onClose(false);\r\n    };\r\n    const onSubmit = (form) => {\r\n        dispatch(createReview({ ...form, templateId, rate }));\r\n        closeForm();\r\n    };\r\n\r\n    const validatorConfig = {\r\n        review: {\r\n            isRequired: {\r\n                message: \"Поле <Отзыв> обязательно для заполнения\"\r\n            },\r\n            min: {\r\n                message: \"Поле <Отзыв> должено состоять минимум из 5 символов\",\r\n                value: 5\r\n            }\r\n        }\r\n    };\r\n\r\n    const { form, handleChange, handleSubmit, errors, isValid } = useForm(\r\n        {},\r\n        onSubmit,\r\n        validatorConfig\r\n    );\r\n\r\n    return (\r\n        <div className=\"card mb-2\">\r\n            <div className=\"card-body \">\r\n                <div>\r\n                    <h5 className=\"mb-3\">Написать отзыв</h5>\r\n                    <span>Ваше имя: {user.name}</span>{\" \"}\r\n                    <div className=\"d-flex flex-row align-items-center flex-wrap\">\r\n                        <span className=\"me-3\">Оцените товар:</span>{\" \"}\r\n                        <StarRating onRating={handleRating} rate={rate} />\r\n                    </div>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <TextAreaField\r\n                            value={form.review}\r\n                            name=\"review\"\r\n                            onChange={handleChange}\r\n                            label=\"Ваш отзыв\"\r\n                            rows=\"3\"\r\n                            error={errors.review}\r\n                        />\r\n                        <div className=\"d-flex justify-content-end\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary\"\r\n                                disabled={!rate || !isValid}\r\n                            >\r\n                                Опубликовать\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nAddReview.propTypes = {\r\n    user: PropTypes.object,\r\n    templateId: PropTypes.string,\r\n    onClose: PropTypes.func\r\n};\r\nexport default AddReview;\r\n","export function timeConverter(time) {\r\n    const timestamp = new Date(time).getTime();\r\n\r\n    const minutes = Math.floor((Date.now() - timestamp) / 1000 / 60);\r\n\r\n    const a = new Date(Number(timestamp));\r\n    const months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\"\r\n    ];\r\n    const year = a.getFullYear();\r\n    const month = months[a.getMonth()];\r\n    const date = a.getDate();\r\n    const hour = a.getHours();\r\n    const min = a.getMinutes();\r\n\r\n    if (minutes > 525600) {\r\n        return date + \" \" + month + \" \" + year;\r\n    } else if (minutes > 1440) {\r\n        return date + \" \" + month;\r\n    } else if (minutes > 30) {\r\n        return (\r\n            (hour < 10 ? \"0\" + hour : hour) + \":\" + (min < 10 ? \"0\" + min : min)\r\n        );\r\n    } else if (minutes > 10) {\r\n        return \"30 минут назад\";\r\n    } else if (minutes > 5) {\r\n        return \"10 минут назад\";\r\n    } else if (minutes > 1) {\r\n        return \"5 минут назад\";\r\n    }\r\n    return \"1 минуту назад\";\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { getUserById } from \"../../../store/users\";\r\nimport ItemRate from \"../itemRate\";\r\nimport { timeConverter } from \"../../../utils/timeConverter\";\r\n\r\nconst Review = ({ review, created_at: created, userId, rate }) => {\r\n    const user = useSelector(getUserById(userId));\r\n\r\n    return (\r\n        <li className=\"list-group-item\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"d-flex flex-row align-items-center\">\r\n                        <div>\r\n                            <img\r\n                                src={user.image}\r\n                                className=\"rounded-circle me-3\"\r\n                                alt=\"avatar\"\r\n                                height=\"35\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div>{user.name}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"d-flex flex-row\">\r\n                        <ItemRate rate={rate} />\r\n\r\n                        <div className=\"ms-auto d-none d-sm-block\">\r\n                            {timeConverter(created)}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>{review}</div>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\nReview.propTypes = {\r\n    review: PropTypes.string,\r\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    userId: PropTypes.string,\r\n    onRemove: PropTypes.func,\r\n    rate: PropTypes.number,\r\n    user: PropTypes.object\r\n};\r\n\r\nexport default Review;\r\n","import AddReview from \"./addReview\";\r\nimport ReviewsList from \"./reviewsList\";\r\nexport default ReviewsList;\r\nexport { AddReview };\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Review from \"./review\";\n\nconst ReviewsList = ({ reviews }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body \">\n                <ul className=\"list-group list-group-flush\">\n                    {reviews.map((review) => (\n                        <Review key={review._id} {...review} />\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\nReviewsList.propTypes = {\n    reviews: PropTypes.array\n};\n\nexport default ReviewsList;\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getReviewsById, getReviewsLoadingStatus } from \"../../store/reviews\";\r\nimport { getIsLoggedIn } from \"../../store/users\";\r\nimport ReviewsList, { AddReview } from \"../common/reviews\";\r\n\r\nconst Reviews = () => {\r\n    const [showAddField, setShowAddField] = useState(false);\r\n    const { category } = useParams();\r\n    const isLoggedIn = useSelector(getIsLoggedIn());\r\n    const isLoading = useSelector(getReviewsLoadingStatus());\r\n\r\n    const reviews = useSelector(getReviewsById(category));\r\n\r\n    const toggleAddCommentField = () => {\r\n        setShowAddField(!showAddField);\r\n    };\r\n\r\n    return (\r\n        <div className=\"mb-3\">\r\n            <h3>Отзывы</h3>\r\n            <hr />\r\n            {!isLoggedIn ? (\r\n                <p>\r\n                    Оставлять отзывы могут только зарегистрированные\r\n                    пользователи. Пожалуйста &nbsp;\r\n                    <Link to=\"/login\" className=\"text-muted\">\r\n                        войдите\r\n                    </Link>\r\n                    &nbsp; или &nbsp;\r\n                    <Link to=\"/register\" className=\"text-muted\">\r\n                        зарегистрируйтесь.\r\n                    </Link>\r\n                </p>\r\n            ) : (\r\n                <button\r\n                    className=\"btn btn-danger ms-auto mb-3\"\r\n                    onClick={toggleAddCommentField}\r\n                >\r\n                    Написать отзыв\r\n                </button>\r\n            )}\r\n\r\n            {showAddField && (\r\n                <AddReview templateId={category} onClose={setShowAddField} />\r\n            )}\r\n\r\n            {!isLoading && reviews.length > 0 ? (\r\n                <ReviewsList reviews={reviews} />\r\n            ) : (\r\n                <p>Отзывов ещё нет — ваш может стать первым.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(Reviews);\r\n","import ProductPage from \"./productPage\";\n\nexport default ProductPage;\n","import React, { useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport ProductHeader from \"../../ui/productHeader\";\r\nimport ProductAdvantages from \"../../ui/productAdvantages\";\r\nimport ProductDetails from \"../../ui/productDetails\";\r\nimport ProductImportant from \"../../ui/productImportant\";\r\n\r\nimport { getProductById } from \"../../../store/products\";\r\n\r\nimport { addItemsCart } from \"../../../store/cartItems\";\r\nimport Reviews from \"../../ui/reviews\";\r\nimport { getAverageRate } from \"../../../store/reviews\";\r\n\r\n// получаем минимальную фасовку товара\r\nconst getInitialStatePrice = (arr) => {\r\n    const newPriceId =\r\n        arr && [...arr].sort((a, b) => a.price - b.price)[0].paintId;\r\n    return { id: newPriceId };\r\n};\r\nconst getCurrentPaintObj = (id, array) =>\r\n    array.find((item) => item.paintId === id);\r\n\r\nconst ProductPage = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { category } = useParams();\r\n    const product = useSelector(getProductById(category));\r\n\r\n    const reviewsObj = useSelector(getAverageRate());\r\n    const countReviewsByProduct = reviewsObj[category]\r\n        ? reviewsObj[category].length\r\n        : 0;\r\n    const averageRateByProduct = reviewsObj[category]\r\n        ? reviewsObj[category].averageRate\r\n        : 0;\r\n\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [isAddCart, setAddCart] = useState(false);\r\n\r\n    const [currentId, setCurrentId] = useState(() =>\r\n        getInitialStatePrice(product.paints)\r\n    );\r\n    console.log(\"currentId\", currentId);\r\n    const handleChange = (target) => {\r\n        setCurrentId((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n        // при изменении объема сбрасываем количество выбранного товара\r\n        setQuantity(1);\r\n        setAddCart(false);\r\n    };\r\n\r\n    // выводим стоимость товара в зависимости от выбранного объема\r\n    const itemPrice = product.paints.find(\r\n        (item) => item.paintId === currentId.id\r\n    ).price;\r\n    const maxQuantity = product.paints.find(\r\n        (item) => item.paintId === currentId.id\r\n    ).count;\r\n\r\n    const handleAddPaintCart = () => {\r\n        const { img, templateId } = product;\r\n        const obj = getCurrentPaintObj(currentId.id, product.paints);\r\n        const payload = { ...obj, quantity, img, templateId };\r\n\r\n        dispatch(addItemsCart(payload));\r\n        setAddCart(true);\r\n    };\r\n    const redirectToCart = () => {\r\n        history.push(\"/basket\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {product ? (\r\n                <div className=\"container my-3\">\r\n                    <ProductHeader\r\n                        product={product}\r\n                        itemPrice={itemPrice}\r\n                        onChange={handleChange}\r\n                        data={currentId}\r\n                        quantity={quantity}\r\n                        setQuantity={setQuantity}\r\n                        maxQuantity={maxQuantity}\r\n                        onAddPaintCart={handleAddPaintCart}\r\n                        redirectToCart={redirectToCart}\r\n                        isAddCart={isAddCart}\r\n                        averageRateByProduct={averageRateByProduct}\r\n                        countReviewsByProduct={countReviewsByProduct}\r\n                    />\r\n                    <ProductAdvantages product={product} />\r\n                    <ProductDetails product={product} />\r\n                    {product.important && (\r\n                        <ProductImportant product={product} />\r\n                    )}\r\n                    <Reviews />\r\n                </div>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductPage;\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\n\nimport Loader from \"../components/common/loader\";\nimport ProductListPage from \"../components/page/productListPage\";\nimport ProductPage from \"../components/page/productPage\";\nimport {\n    getFiltredProducts,\n    getProductsLoadingStatus,\n    loadProductsList\n} from \"../store/products\";\n\nconst productCategory = {\n    paint: \"краска\",\n    enamel: \"эмаль\",\n    primer: \"грунтовка\",\n    varnish: \"лак\",\n    oilAndWaxes: \"масло и воск\",\n    woodFinish: \"лазурь\"\n};\n\nconst Products = () => {\n    const dispatch = useDispatch();\n    const { category } = useParams();\n    const products = useSelector(getFiltredProducts());\n    const isLoading = useSelector(getProductsLoadingStatus());\n\n    useEffect(() => {\n        // if /products или /products/paint,/products/enamel..., not /products/974e97f2-549d-48d1-8f10-151c1bd316c8\n        if (!category || productCategory[category]) {\n            dispatch(loadProductsList(category));\n        }\n    }, [category]);\n\n    if (isLoading) return <Loader />;\n\n    return (\n        <>\n            {category && !productCategory[category] ? (\n                <ProductPage userId={category} />\n            ) : (\n                <ProductListPage items={products} />\n            )}\n        </>\n    );\n};\n\nexport default Products;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst AdminPage = () => {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-8\">\n                    <h1>Страница админа</h1>\n                    <Link to=\"/admin/templates\">\n                        <button className=\"btn btn-outline-success\">\n                            Шаблоны красок\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AdminPage;\n","import SwiperSection from \"./swiperSection\";\r\nexport default SwiperSection;\r\n","import React from \"react\";\r\n// import Image from \"../../../assets/images/bg10.jpg\";\r\n\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react.js\";\r\n\r\nimport { Pagination, Navigation } from \"swiper\";\r\n\r\n// Import Swiper styles\r\nimport \"swiper/swiper-bundle.min.css\";\r\nimport \"swiper/swiper.min.css\";\r\n\r\nimport \"swiper/modules/navigation/navigation\";\r\nimport \"swiper/modules/pagination/pagination\";\r\n\r\nimport \"./swiperSection.css\";\r\n\r\nconst SwiperSection = () => {\r\n    return (\r\n        <>\r\n            <Swiper\r\n                pagination={{\r\n                    type: \"fraction\"\r\n                }}\r\n                navigation={true}\r\n                modules={[Pagination, Navigation]}\r\n                className=\"swiper-section\"\r\n            >\r\n                <SwiperSlide>\r\n                    <img\r\n                        src=\"https://images.unsplash.com/photo-1603573608528-62d6902517c4?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1176&q=80\"\r\n                        alt=\"swiper 1 \"\r\n                    />\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <img\r\n                        src=\"https://images.unsplash.com/photo-1568334763051-b482f51a15f6?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\"\r\n                        alt=\"swiper 1 \"\r\n                    />\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <img\r\n                        src=\"https://images.unsplash.com/photo-1641055621040-8fb3796a5a92?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\"\r\n                        alt=\"swiper 1 \"\r\n                    />\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <img\r\n                        src=\"https://images.unsplash.com/photo-1644574739831-d19ded59cae8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80\"\r\n                        alt=\"swiper 1 \"\r\n                    />\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <img\r\n                        src=\"https://images.unsplash.com/photo-1644351032803-9c6f42458ea7?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1071&q=80\"\r\n                        alt=\"swiper 1 \"\r\n                    />\r\n                </SwiperSlide>\r\n            </Swiper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SwiperSection;\r\n","export default __webpack_public_path__ + \"static/media/palette.06dbea4a.svg\";","export default __webpack_public_path__ + \"static/media/paint-roller.3a38f1bd.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../assets/palette.svg\";\r\nimport paintRoller from \"../../assets/paint-roller.svg\";\r\n\r\nconst categoriesData = [\r\n    {\r\n        title: \"Краски\",\r\n        icon: paintRoller,\r\n        path: \"/products/paint\",\r\n        id: 1\r\n    },\r\n    {\r\n        title: \"Эмали\",\r\n        icon: logo,\r\n        path: \"/products/enamel\",\r\n        id: 2\r\n    },\r\n    {\r\n        title: \"Грунтовки\",\r\n        icon: paintRoller,\r\n        path: \"/products/primer\",\r\n        id: 3\r\n    },\r\n    {\r\n        title: \"Лазури\",\r\n        icon: paintRoller,\r\n        path: \"/products/woodFinish\",\r\n        id: 4\r\n    },\r\n    {\r\n        title: \"Масла и воски\",\r\n        icon: paintRoller,\r\n        path: \"/products/oilAndWaxes\",\r\n        id: 5\r\n    },\r\n    {\r\n        title: \"Лаки\",\r\n        icon: paintRoller,\r\n        path: \"/products/varnish\",\r\n        id: 6\r\n    }\r\n];\r\n\r\nconst Categories = () => {\r\n    return (\r\n        <div className=\"container my-5\">\r\n            <div className=\"row\">\r\n                {categoriesData.map((category) => (\r\n                    <div className=\"col-sm-6 col-xl-3\" key={category.id}>\r\n                        <Link\r\n                            to={category.path}\r\n                            className=\"text-decoration-none text-secondary\"\r\n                        >\r\n                            <div className=\"d-flex justify-content-baseline align-items-center p-4  rounded-3 \">\r\n                                <span className=\"mb-0\">\r\n                                    <img\r\n                                        src={category.icon}\r\n                                        alt=\"Logo\"\r\n                                        height={50}\r\n                                    />\r\n                                </span>\r\n                                <div className=\"ms-4 h6 fw-normal\">\r\n                                    <h5 className=\"mb-0 fw-bold\">\r\n                                        {category.title}\r\n                                    </h5>\r\n                                    <p className=\"mb-0\">Expert Tutors</p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Categories;\r\n","import React from \"react\";\nimport SwiperSection from \"../components/common/swiperSection\";\nimport Categories from \"../components/ui/categories\";\n// import HeroSliderSection from \"../components/ui/heroSliderSection/HeroSliderSection\";\n// import PageTitleShop from \"../components/ui/pageTitleShop\";\n\nconst HomePage = () => {\n    return (\n        <>\n            {/* <PageTitleShop /> */}\n            <SwiperSection />\n            {/* <HeroSliderSection /> */}\n            <Categories />\n        </>\n    );\n};\n\nexport default HomePage;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { signUp } from \"../../store/users\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n    const [data, setData] = useState({});\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Поле <Электронная почта> обязательно для заполнения\"\n            },\n            isEmail: {\n                message: \"Поле <Email> введено некорректно\"\n            }\n        },\n        name: {\n            isRequired: {\n                message: \"Поле <Имя> обязательно для заполнения\"\n            },\n            min: {\n                message: \"Поле <Имя> должено составлть минимум 3 символа\",\n                value: 3\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Поле <Пароль> обязательно для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состаять миниму из 8 символов\",\n                value: 8\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        dispatch(signUp(data));\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email || \"\"}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Имя\"\n                type=\"name\"\n                name=\"name\"\n                value={data.name || \"\"}\n                onChange={handleChange}\n                error={errors.name}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password || \"\"}\n                onChange={handleChange}\n                error={errors.password}\n            />\n\n            <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TextField from \"../common/form/textField\";\n\nimport { validator } from \"../../utils/validator\";\nimport { login } from \"../../store/users\";\n\nconst LoginForm = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\"\n    });\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Электронная почта не корректна\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapital: {\n                message: \"Пароль должен иметь одну заглавную букву\"\n            },\n            isDigit: {\n                message: \"Пароль должен иметь одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        }\n    };\n\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    useEffect(() => {\n        validate();\n    }, [data]);\n\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const redirect = history.location.state\n            ? history.location.state.from.pathname\n            : \"/\";\n        dispatch(login({ data, redirect }));\n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    type=\"text\"\n                    label=\"Электронная почта\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    value={data.email}\n                    error={errors.email}\n                />\n                <TextField\n                    type=\"password\"\n                    label=\"Пароль\"\n                    name=\"password\"\n                    onChange={handleChange}\n                    value={data.password}\n                    error={errors.password}\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary w-100\"\n                    disabled={!isValid}\n                >\n                    Отправить\n                </button>\n            </form>\n        </>\n    );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport RegisterForm from \"../components/ui/registerForm\";\nimport LoginForm from \"../components/ui/loginForm\";\n\nconst Login = () => {\n    const { pathname } = useLocation();\n    const isLogin = pathname === \"/login\";\n    const formTitle = isLogin ? \"Вход\" : \"Регистрация\";\n    const descriptionText = isLogin ? (\n        <Link to=\"/register\" className=\"text-muted\">\n            Dont have account?\n        </Link>\n    ) : (\n        <Link to=\"/login\" className=\"text-muted\">\n            Already have account? Sign In\n        </Link>\n    );\n\n    return (\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-6 border shadow p-5 rounded-3\">\n                    <div className=\"text-center\">\n                        <h2 className=\"mb-4\">{formTitle}</h2>\n                        <p>{descriptionText}</p>\n                    </div>\n\n                    {isLogin ? <LoginForm /> : <RegisterForm />}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { logOut } from \"../store/users\";\n\nconst LogOut = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(logOut());\n    }, []);\n    return <h1>Loading...</h1>;\n};\n\nexport default LogOut;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Collapse as BsCollapse } from \"bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { timeConverter } from \"../../utils/timeConverter\";\n\nconst CollapseWrapper = ({ children, data, title, amountPayable, status }) => {\n    const [display, setDisaplay] = useState(false);\n    const collapseRef = useRef();\n    const toggleDisplay = () => {\n        setDisaplay((prevState) => !prevState);\n    };\n    useEffect(() => {\n        const newCollapse = new BsCollapse(collapseRef.current, {\n            toggle: false\n        });\n        display ? newCollapse.show() : newCollapse.hide();\n    }, [display]);\n\n    return (\n        <div className=\"card\">\n            <div className=\"card-body\">\n                <div className=\"d-flex flex-column flex-sm-row justify-content-sm-between \">\n                    <div>\n                        Статус:\n                        <span\n                            className={\n                                \"badge ms-2 \" +\n                                (status === \"isWorking\"\n                                    ? \"bg-danger\"\n                                    : \"bg-success\")\n                            }\n                        >\n                            {status}\n                        </span>\n                    </div>\n\n                    <span className=\"\">Сумма заказа: {amountPayable}</span>\n                    <div>\n                        <span className=\"me-2 d-none d-md-inline-block\">\n                            {timeConverter(data)}\n                        </span>\n                        <i\n                            className={\n                                \"bi bi-chevron-\" + (!display ? \"down\" : \"up\")\n                            }\n                            onClick={toggleDisplay}\n                        ></i>\n                    </div>\n                </div>\n                <div className=\"collapse mt-3\" ref={collapseRef} id={data}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\nCollapseWrapper.defaultProps = {\n    title: \"Информация\"\n};\nCollapseWrapper.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    title: PropTypes.string,\n    name: PropTypes.string,\n    data: PropTypes.string,\n    amountPayable: PropTypes.number,\n    status: PropTypes.string\n};\n\nexport default CollapseWrapper;\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    getOrders,\r\n    getOrdersLoadingStatus,\r\n    loadOrdersList\r\n} from \"../../store/orders\";\r\nimport CollapseWrapper from \"../common/collapse\";\r\nimport Loader from \"../common/loader\";\r\n\r\nconst OrdersList = () => {\r\n    const dispatch = useDispatch();\r\n    const orders = useSelector(getOrders());\r\n    const isLoading = useSelector(getOrdersLoadingStatus());\r\n    console.log(\"orders\", orders);\r\n    useEffect(() => {\r\n        dispatch(loadOrdersList());\r\n    }, []);\r\n\r\n    if (isLoading) return <Loader />;\r\n    if (orders && orders.length === 0) return null;\r\n    return (\r\n        <div className=\"px-4 mt-4\">\r\n            <h2>История заказов</h2>\r\n\r\n            {orders &&\r\n                orders.map((order) => (\r\n                    <React.Fragment key={order._id}>\r\n                        <CollapseWrapper\r\n                            data={order.created_at}\r\n                            amountPayable={order.amountPayable}\r\n                            status={order.status}\r\n                        >\r\n                            <div className=\"table-responsive-md\">\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">название</th>\r\n                                            <th scope=\"col\">количество</th>\r\n                                            <th scope=\"col\">цена</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {order.goodsSold.map((item, index) => (\r\n                                            <tr key={index}>\r\n                                                <td key={item.paintId}>\r\n                                                    {item.name}\r\n                                                </td>\r\n\r\n                                                <td>{item.quantity}</td>\r\n                                                <td>{item.price}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </CollapseWrapper>\r\n                    </React.Fragment>\r\n                ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrdersList;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport TextField from \"../components/common/form/textField\";\r\nimport OrdersList from \"../components/ui/ordersList\";\r\nimport useForm from \"../hooks/useForm\";\r\nimport { getUserById, updateUser } from \"../store/users\";\r\n\r\nconst User = () => {\r\n    const dispatch = useDispatch();\r\n    const { userId } = useParams();\r\n    const user = useSelector(getUserById(userId));\r\n\r\n    const [isBlockFileds, setBlockFileds] = useState(true);\r\n\r\n    const toggleBlock = () => {\r\n        setBlockFileds(!isBlockFileds);\r\n    };\r\n\r\n    const validatorConfig = {\r\n        name: {\r\n            isRequired: {\r\n                message: \"Поле <Отзыв> обязательно для заполнения\"\r\n            },\r\n            min: {\r\n                message: \"Поле <Отзыв> должено состоять минимум из 5 символов\",\r\n                value: 5\r\n            }\r\n        }\r\n    };\r\n    const onSubmit = (form) => {\r\n        dispatch(updateUser(form));\r\n        setBlockFileds(true);\r\n    };\r\n\r\n    const { form, handleChange, handleSubmit, errors } = useForm(\r\n        { ...user },\r\n        onSubmit,\r\n        validatorConfig\r\n    );\r\n\r\n    return (\r\n        <div className=\"container mb-2 min-vh-100\">\r\n            <div className=\"px-4 mt-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-4\">\r\n                        <div className=\"card mb-4 mb-xl-0\">\r\n                            <div className=\"card-header\">Profile Picture</div>\r\n                            <div className=\"card-body text-center\">\r\n                                <img\r\n                                    className=\"img-account-profile  mb-2 w-100\"\r\n                                    src={user.image}\r\n                                    alt=\"user\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-8\">\r\n                        <div className=\"card mb-4 h-100\">\r\n                            <div className=\"card-header\">Account Details</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <fieldset disabled={isBlockFileds}>\r\n                                        <TextField\r\n                                            label=\"Имя\"\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            value={form.name || \"\"}\r\n                                            onChange={handleChange}\r\n                                            error={errors.name}\r\n                                        />\r\n\r\n                                        <TextField\r\n                                            type=\"text\"\r\n                                            label=\"Электронная почта\"\r\n                                            name=\"email\"\r\n                                            onChange={handleChange}\r\n                                            value={form.email}\r\n                                            error={errors.email}\r\n                                        />\r\n                                        <TextField\r\n                                            type=\"text\"\r\n                                            label=\"Аватар\"\r\n                                            name=\"image\"\r\n                                            onChange={handleChange}\r\n                                            value={form.image}\r\n                                            error={errors.image}\r\n                                        />\r\n                                    </fieldset>\r\n                                    <button\r\n                                        className=\"btn btn-primary\"\r\n                                        type=\"button\"\r\n                                        onClick={toggleBlock}\r\n                                    >\r\n                                        Изменить\r\n                                    </button>\r\n                                    <button\r\n                                        className=\" ms-2 btn btn-success\"\r\n                                        type=\"submit\"\r\n                                        disabled={isBlockFileds}\r\n                                    >\r\n                                        Сохранить\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <OrdersList />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\n\nimport BasketPage from \"./components/page/basketPage\";\nimport CreateTemplatePage from \"./components/page/createTemplatePage\";\nimport EditTemplatePage from \"./components/page/editTemplatePage\";\nimport TemplateListPage from \"./components/page/templateListPage\";\nimport Products from \"./layouts/products\";\nimport AdminPage from \"./layouts/adminPage\";\nimport HomePage from \"./layouts/homePage\";\nimport Login from \"./layouts/login\";\nimport LogOut from \"./layouts/logOut\";\nimport User from \"./layouts/user\";\nimport Tests from \"./layouts/test\";\n\nconst routes = [\n    {\n        path: \"/tests\",\n        name: \"TestComponent\",\n        component: Tests,\n        display: false\n    },\n    {\n        path: \"/user/:userId\",\n        name: \"User\",\n        component: User,\n        display: false\n    },\n    {\n        path: \"/logout\",\n        name: \"Выход\",\n        component: LogOut,\n        display: false\n    },\n    {\n        path: \"/login\",\n        name: \"Вход\",\n        component: Login,\n        rigthSide: true,\n        public: true\n    },\n    {\n        path: \"/register\",\n        name: \"Регистрация\",\n        component: Login,\n        rigthSide: true,\n        public: true\n    },\n\n    {\n        path: \"/admin/templates/create\",\n        name: \"Создание шаблона\",\n        component: CreateTemplatePage,\n        display: false,\n        protected: true\n    },\n    {\n        path: \"/admin/templates/:id\",\n        name: \"Создание-карточки-товара\",\n        component: EditTemplatePage,\n        display: false,\n        protected: true\n    },\n    {\n        path: \"/admin/templates\",\n        name: \"Шаблоны\",\n        component: TemplateListPage,\n        display: false,\n        protected: true\n    },\n    {\n        path: \"/admin\",\n        name: \"Админ\",\n        component: AdminPage,\n        rigthSide: true,\n        private: true,\n        protected: true\n    },\n    {\n        path: \"/basket\",\n        name: \"Корзина\",\n        component: BasketPage,\n        rigthSide: true,\n        public: true,\n        private: true,\n        icon: <i className=\"bi bi-cart4\"></i>\n    },\n    {\n        path: \"/products/:category\",\n        name: \"Все товары\",\n        component: Products,\n        display: false\n    },\n    {\n        path: \"/products\",\n        name: \"Все товары\",\n        component: Products,\n        display: false\n    },\n    {\n        path: \"/products/paint\",\n        name: \"Краски\",\n        component: Products\n    },\n    {\n        path: \"/products/enamel\",\n        name: \"Эмали\",\n        component: Products\n    },\n    {\n        path: \"/products/primer\",\n        name: \"Грунтовки\",\n        component: Products\n    },\n    {\n        path: \"/products/woodFinish\",\n        name: \"Лазури\",\n        component: Products\n    },\n    {\n        path: \"/products/oilAndWaxes\",\n        name: \"Масла и воски\",\n        component: Products\n    },\n\n    {\n        path: \"/products/varnish\",\n        name: \"Лаки\",\n        component: Products\n    },\n\n    { path: \"/\", name: \"Главная\", component: HomePage, display: false }\n];\nexport default routes;\n","import React from \"react\";\r\n\r\nconst Test = () => {\r\n    return <h2>Tests</h2>;\r\n};\r\n\r\nexport default Test;\r\n","import React, { useState } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport \"./navBar.css\";\n\nimport NavProfile from \"../navProfile\";\nimport routes from \"../../../routes.js\";\nimport { getIsLoggedIn } from \"../../../store/users\";\nimport { getCartCount } from \"../../../store/cartItems\";\n\nconst NavBar = () => {\n    const location = useLocation().pathname;\n    const [collapse, setCollapse] = useState(false);\n\n    const countCartItems = useSelector(getCartCount());\n\n    const isLoggedIn = useSelector(getIsLoggedIn());\n    const toggleCollapse = () => setCollapse(!collapse);\n    const closeMobileMenu = () => {\n        setCollapse(false);\n    };\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"navbar-brand\" onClick={closeMobileMenu}>\n                    <i className=\"bi bi-github me-2 text-danger\"></i>My Paints\n                </Link>\n                <button className=\"navbar-toggler\" onClick={toggleCollapse}>\n                    <i\n                        className={\n                            collapse ? \"bi bi-x-lg\" : \"navbar-toggler-icon\"\n                        }\n                    />\n                </button>\n                <div\n                    className={\n                        \"collapse navbar-collapse\" + (collapse ? \" show\" : \"\")\n                    }\n                >\n                    <ul className=\"navbar-nav align-items-center\">\n                        {routes.map((prop, key) => {\n                            if (prop.display !== false && !prop.rigthSide) {\n                                return (\n                                    <Link\n                                        to={prop.path}\n                                        key={key}\n                                        className={\n                                            \"nav-link\" +\n                                            (prop.path === location\n                                                ? \" active\"\n                                                : \"\")\n                                        }\n                                        onClick={closeMobileMenu}\n                                    >\n                                        {prop.name}\n                                    </Link>\n                                );\n                            }\n                            return null;\n                        })}\n                    </ul>\n                    <ul className=\"navbar-nav align-items-center ms-auto\">\n                        {routes.map((prop, key) => {\n                            if (\n                                prop.display !== false &&\n                                prop.rigthSide &&\n                                (isLoggedIn ? prop.private : prop.public)\n                            ) {\n                                return (\n                                    <Link\n                                        to={prop.path}\n                                        key={key}\n                                        className={\n                                            \"nav-link position-relative\" +\n                                            (prop.path === location\n                                                ? \" active\"\n                                                : \"\")\n                                        }\n                                        onClick={closeMobileMenu}\n                                    >\n                                        {prop.icon ? prop.icon : prop.name}\n                                        {prop.name === \"Корзина\" &&\n                                            countCartItems > 0 && (\n                                                <span className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">\n                                                    {countCartItems}\n                                                    <span className=\"visually-hidden\">\n                                                        unread messages\n                                                    </span>\n                                                </span>\n                                            )}\n                                    </Link>\n                                );\n                            }\n                            return null;\n                        })}\n                        {isLoggedIn && <NavProfile />}\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getIsLoggedIn } from \"../../store/users\";\n\nconst ProtectedRoute = ({ component: Component, children, ...rest }) => {\n    const isLoggedIn = useSelector(getIsLoggedIn());\n    return (\n        <Route\n            {...rest}\n            render={(props) => {\n                if (!isLoggedIn) {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: \"/login\",\n                                state: {\n                                    from: props.location\n                                }\n                            }}\n                        />\n                    );\n                } else {\n                    return Component ? <Component {...props} /> : children;\n                }\n            }}\n        />\n    );\n};\nProtectedRoute.propTypes = {\n    component: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    location: PropTypes.object\n};\n\nexport default ProtectedRoute;\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    function getYear() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    return (\r\n        <footer className=\"bg-dark text-white mt-auto\">\r\n            <div className=\"container py-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                        © {getYear()} my-paints.shop.ru Все права защищены\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport routes from \"../../routes\";\n\nfunction Breadcrumb() {\n    const location = useLocation().pathname;\n    const crumbs = location.split(\"/\").filter((item) => item);\n\n    return (\n        <div className=\"container\">\n            <nav className=\"row mt-4\">\n                <ol className=\"breadcrumb\">\n                    {crumbs.length > 0 ? (\n                        <li className=\"breadcrumb-item\">\n                            <Link to={`/`} className=\"text-white\">\n                                Главная\n                            </Link>\n                        </li>\n                    ) : (\n                        <li className=\"breadcrumb-item text-white\">Главная</li>\n                    )}\n\n                    {crumbs.map((crumb, i) => {\n                        const routeTo = `/${crumbs.slice(0, i + 1).join(\"/\")}`;\n                        const pathName = routes.find(\n                            (item) => item.path === routeTo\n                        );\n\n                        const isLast = i === crumbs.length - 1;\n                        return isLast ? (\n                            <li key={i} className=\"breadcrumb-item text-white\">\n                                {pathName ? pathName.name : crumb}\n                            </li>\n                        ) : (\n                            <li key={i} className=\"breadcrumb-item\">\n                                <Link className=\"text-white\" to={routeTo}>\n                                    {pathName ? pathName.name : crumb}\n                                </Link>\n                            </li>\n                        );\n                    })}\n                </ol>\n            </nav>\n        </div>\n    );\n}\n\nexport default Breadcrumb;\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport useForm from \"../../hooks/useForm\";\r\nimport { addSearch, clearSearchStore, getSearch } from \"../../store/filters\";\r\nimport TextField from \"../common/form/textField\";\r\n\r\nconst Search = () => {\r\n    const dispatch = useDispatch();\r\n    const searchStore = useSelector(getSearch());\r\n    const { pathname } = useLocation();\r\n\r\n    const onSubmit = (form) => {\r\n        dispatch(addSearch(form));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (searchStore && pathname !== \"/products\") {\r\n            form.search = \"\";\r\n            dispatch(clearSearchStore());\r\n        }\r\n    }, [pathname]);\r\n\r\n    const validatorConfig = {};\r\n\r\n    const { form, handleChange, handleSubmit } = useForm(\r\n        {},\r\n        onSubmit,\r\n        validatorConfig\r\n    );\r\n    return (\r\n        <form\r\n            className=\"input-group mt-md-4 mb-4 mb-md-0\"\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <TextField\r\n                type=\"text\"\r\n                placeholder=\"Введите название товара\"\r\n                name=\"search\"\r\n                onChange={handleChange}\r\n                value={form.search || \"\"}\r\n            >\r\n                <button\r\n                    className=\"btn btn-outline-secondary bg-white border-start-0 border\"\r\n                    type=\"submit\"\r\n                >\r\n                    <i className=\"fa fa-search\"></i>\r\n                </button>\r\n            </TextField>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"./breadcrumbs\";\r\nimport Search from \"./search\";\r\n\r\nconst BreadcrumbsAndSearchBar = () => {\r\n    return (\r\n        <section className=\"bg-dark navbar-dark\">\r\n            <div className=\"container\">\r\n                <div className=\"row d-flex align-items-baseline justify-content-between\">\r\n                    <div className=\"col-md-6\">\r\n                        <Breadcrumb />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <Search />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default BreadcrumbsAndSearchBar;\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\n\r\nimport NavBar from \"./components/ui/navbar/navBar.jsx\";\r\nimport ProtectedRoute from \"./components/common/protectedRoute\";\r\n\r\nimport routes from \"./routes\";\r\nimport { getIsLoggedIn, loadUsers } from \"./store/users.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadReviewsList } from \"./store/reviews.js\";\r\nimport Footer from \"./components/ui/footer.jsx\";\r\nimport BreadcrumbsAndSearchBar from \"./components/ui/breadcrumbsAndSearchBar.jsx\";\r\n\r\nconst getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n        if (prop.protected === true) {\r\n            return (\r\n                <ProtectedRoute\r\n                    path={prop.path}\r\n                    component={prop.component}\r\n                    key={key}\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <Route path={prop.path} component={prop.component} key={key} />\r\n            );\r\n        }\r\n    });\r\n};\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector(getIsLoggedIn());\r\n\r\n    useEffect(() => {\r\n        dispatch(loadReviewsList());\r\n        dispatch(loadUsers());\r\n    }, [isLoggedIn]);\r\n\r\n    return (\r\n        <div className=\"main-content\">\r\n            <NavBar />\r\n            <main>\r\n                <BreadcrumbsAndSearchBar />\r\n                <Switch>\r\n                    <Switch>{getRoutes(routes)}</Switch>\r\n                </Switch>\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"./index.css\";\nimport createStore from \"./store/createStore\";\nimport App from \"./App\";\nimport history from \"./utils/history\";\n\nconst store = createStore();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Router history={history}>\n                <App />\n            </Router>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}